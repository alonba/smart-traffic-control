non-fluents grid_3x3 {
    domain = BLX_model;

    objects {
        intersection : {i0, i1, i2, i3, i4, i5, i6, i7, i8};
        link         : {l-i0-s0, l-i0-i1, l-i0-i3, l-i0-s11, l-i1-s1, l-i1-i2, l-i1-i4, l-i1-i0, l-i2-s2, l-i2-s3, l-i2-i5, l-i2-i1, l-i3-i0, l-i3-i4, l-i3-i6, l-i3-s10, l-i4-i1, l-i4-i5, l-i4-i7, l-i4-i3, l-i5-i2, l-i5-s4, l-i5-i8, l-i5-i4, l-i6-i3, l-i6-i7, l-i6-s8, l-i6-s9, l-i7-i4, l-i7-i8, l-i7-s7, l-i7-i6, l-i8-i5, l-i8-s5, l-i8-s6, l-i8-i7, l-s0-i0, l-s8-i6, l-s1-i1, l-s7-i7, l-s2-i2, l-s6-i8, l-s11-i0, l-s3-i2, l-s10-i3, l-s4-i5, l-s9-i6, l-s5-i8};
        time         : {t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, t29};
    };

    non-fluents {
        //sources
        SOURCE(l-s11-i0);
        SOURCE(l-s3-i2);
        SOURCE(l-s10-i3);
        SOURCE(l-s4-i5);
        SOURCE(l-s9-i6);
        SOURCE(l-s5-i8);
        SOURCE(l-s0-i0);
        SOURCE(l-s8-i6);
        SOURCE(l-s1-i1);
        SOURCE(l-s7-i7);
        SOURCE(l-s2-i2);
        SOURCE(l-s6-i8);
        //sinks
        SINK(l-i0-s11);
        SINK(l-i2-s3);
        SINK(l-i3-s10);
        SINK(l-i5-s4);
        SINK(l-i6-s9);
        SINK(l-i8-s5);
        SINK(l-i0-s0);
        SINK(l-i6-s8);
        SINK(l-i1-s1);
        SINK(l-i7-s7);
        SINK(l-i2-s2);
        SINK(l-i8-s6);
        //satflow rates
        MU(l-s11-i0,l-i0-i1) = 1.06;
        MU(l-s11-i0,l-i0-s0) = 0.636;
        MU(l-s11-i0,l-i0-i3) = 0.42400000000000004;
        MU(l-i1-i0,l-i0-s11) = 1.06;
        MU(l-s0-i0,l-i0-i1) = 0.636;
        MU(l-i3-i0,l-i0-i1) = 0.42400000000000004;
        MU(l-s0-i0,l-i0-i3) = 1.06;
        MU(l-i1-i0,l-i0-i3) = 0.636;
        MU(l-i1-i0,l-i0-s0) = 0.42400000000000004;
        MU(l-i3-i0,l-i0-s0) = 1.06;
        MU(l-i3-i0,l-i0-s11) = 0.636;
        MU(l-s0-i0,l-i0-s11) = 0.42400000000000004;
        MU(l-i0-i1,l-i1-i2) = 1.06;
        MU(l-i0-i1,l-i1-s1) = 0.636;
        MU(l-i0-i1,l-i1-i4) = 0.42400000000000004;
        MU(l-i2-i1,l-i1-i0) = 1.06;
        MU(l-s1-i1,l-i1-i2) = 0.636;
        MU(l-i4-i1,l-i1-i2) = 0.42400000000000004;
        MU(l-s1-i1,l-i1-i4) = 1.06;
        MU(l-i2-i1,l-i1-i4) = 0.636;
        MU(l-i2-i1,l-i1-s1) = 0.42400000000000004;
        MU(l-i4-i1,l-i1-s1) = 1.06;
        MU(l-i4-i1,l-i1-i0) = 0.636;
        MU(l-s1-i1,l-i1-i0) = 0.42400000000000004;
        MU(l-i1-i2,l-i2-s3) = 1.06;
        MU(l-i1-i2,l-i2-s2) = 0.636;
        MU(l-i1-i2,l-i2-i5) = 0.42400000000000004;
        MU(l-s3-i2,l-i2-i1) = 1.06;
        MU(l-s2-i2,l-i2-s3) = 0.636;
        MU(l-i5-i2,l-i2-s3) = 0.42400000000000004;
        MU(l-s2-i2,l-i2-i5) = 1.06;
        MU(l-s3-i2,l-i2-i5) = 0.636;
        MU(l-s3-i2,l-i2-s2) = 0.42400000000000004;
        MU(l-i5-i2,l-i2-s2) = 1.06;
        MU(l-i5-i2,l-i2-i1) = 0.636;
        MU(l-s2-i2,l-i2-i1) = 0.42400000000000004;
        MU(l-s10-i3,l-i3-i4) = 1.06;
        MU(l-s10-i3,l-i3-i0) = 0.636;
        MU(l-s10-i3,l-i3-i6) = 0.42400000000000004;
        MU(l-i4-i3,l-i3-s10) = 1.06;
        MU(l-i0-i3,l-i3-i4) = 0.636;
        MU(l-i6-i3,l-i3-i4) = 0.42400000000000004;
        MU(l-i0-i3,l-i3-i6) = 1.06;
        MU(l-i4-i3,l-i3-i6) = 0.636;
        MU(l-i4-i3,l-i3-i0) = 0.42400000000000004;
        MU(l-i6-i3,l-i3-i0) = 1.06;
        MU(l-i6-i3,l-i3-s10) = 0.636;
        MU(l-i0-i3,l-i3-s10) = 0.42400000000000004;
        MU(l-i3-i4,l-i4-i5) = 1.06;
        MU(l-i3-i4,l-i4-i1) = 0.636;
        MU(l-i3-i4,l-i4-i7) = 0.42400000000000004;
        MU(l-i5-i4,l-i4-i3) = 1.06;
        MU(l-i1-i4,l-i4-i5) = 0.636;
        MU(l-i7-i4,l-i4-i5) = 0.42400000000000004;
        MU(l-i1-i4,l-i4-i7) = 1.06;
        MU(l-i5-i4,l-i4-i7) = 0.636;
        MU(l-i5-i4,l-i4-i1) = 0.42400000000000004;
        MU(l-i7-i4,l-i4-i1) = 1.06;
        MU(l-i7-i4,l-i4-i3) = 0.636;
        MU(l-i1-i4,l-i4-i3) = 0.42400000000000004;
        MU(l-i4-i5,l-i5-s4) = 1.06;
        MU(l-i4-i5,l-i5-i2) = 0.636;
        MU(l-i4-i5,l-i5-i8) = 0.42400000000000004;
        MU(l-s4-i5,l-i5-i4) = 1.06;
        MU(l-i2-i5,l-i5-s4) = 0.636;
        MU(l-i8-i5,l-i5-s4) = 0.42400000000000004;
        MU(l-i2-i5,l-i5-i8) = 1.06;
        MU(l-s4-i5,l-i5-i8) = 0.636;
        MU(l-s4-i5,l-i5-i2) = 0.42400000000000004;
        MU(l-i8-i5,l-i5-i2) = 1.06;
        MU(l-i8-i5,l-i5-i4) = 0.636;
        MU(l-i2-i5,l-i5-i4) = 0.42400000000000004;
        MU(l-s9-i6,l-i6-i7) = 1.06;
        MU(l-s9-i6,l-i6-i3) = 0.636;
        MU(l-s9-i6,l-i6-s8) = 0.42400000000000004;
        MU(l-i7-i6,l-i6-s9) = 1.06;
        MU(l-i3-i6,l-i6-i7) = 0.636;
        MU(l-s8-i6,l-i6-i7) = 0.42400000000000004;
        MU(l-i3-i6,l-i6-s8) = 1.06;
        MU(l-i7-i6,l-i6-s8) = 0.636;
        MU(l-i7-i6,l-i6-i3) = 0.42400000000000004;
        MU(l-s8-i6,l-i6-i3) = 1.06;
        MU(l-s8-i6,l-i6-s9) = 0.636;
        MU(l-i3-i6,l-i6-s9) = 0.42400000000000004;
        MU(l-i6-i7,l-i7-i8) = 1.06;
        MU(l-i6-i7,l-i7-i4) = 0.636;
        MU(l-i6-i7,l-i7-s7) = 0.42400000000000004;
        MU(l-i8-i7,l-i7-i6) = 1.06;
        MU(l-i4-i7,l-i7-i8) = 0.636;
        MU(l-s7-i7,l-i7-i8) = 0.42400000000000004;
        MU(l-i4-i7,l-i7-s7) = 1.06;
        MU(l-i8-i7,l-i7-s7) = 0.636;
        MU(l-i8-i7,l-i7-i4) = 0.42400000000000004;
        MU(l-s7-i7,l-i7-i4) = 1.06;
        MU(l-s7-i7,l-i7-i6) = 0.636;
        MU(l-i4-i7,l-i7-i6) = 0.42400000000000004;
        MU(l-i7-i8,l-i8-s5) = 1.06;
        MU(l-i7-i8,l-i8-i5) = 0.636;
        MU(l-i7-i8,l-i8-s6) = 0.42400000000000004;
        MU(l-s5-i8,l-i8-i7) = 1.06;
        MU(l-i5-i8,l-i8-s5) = 0.636;
        MU(l-s6-i8,l-i8-s5) = 0.42400000000000004;
        MU(l-i5-i8,l-i8-s6) = 1.06;
        MU(l-s5-i8,l-i8-s6) = 0.636;
        MU(l-s5-i8,l-i8-i5) = 0.42400000000000004;
        MU(l-s6-i8,l-i8-i5) = 1.06;
        MU(l-s6-i8,l-i8-i7) = 0.636;
        MU(l-i5-i8,l-i8-i7) = 0.42400000000000004;
        //turn probabilities
        BETA(l-s11-i0,l-i0-i1) = 0.6993669625090141;
        BETA(l-s11-i0,l-i0-s0) = 0.20063303749098588;
        BETA(l-s11-i0,l-i0-i3) = 0.10000000000000003;
        BETA(l-i1-i0,l-i0-s11) = 0.6254686774447576;
        BETA(l-s0-i0,l-i0-i1) = 0.2745313225552423;
        BETA(l-i3-i0,l-i0-i1) = 0.10000000000000003;
        BETA(l-s0-i0,l-i0-i3) = 0.6902706968742468;
        BETA(l-i1-i0,l-i0-i3) = 0.2097293031257532;
        BETA(l-i1-i0,l-i0-s0) = 0.1;
        BETA(l-i3-i0,l-i0-s0) = 0.7845575332108566;
        BETA(l-i3-i0,l-i0-s11) = 0.11544246678914334;
        BETA(l-s0-i0,l-i0-s11) = 0.10000000000000002;
        BETA(l-i0-i1,l-i1-i2) = 0.7914172638918946;
        BETA(l-i0-i1,l-i1-s1) = 0.10858273610810537;
        BETA(l-i0-i1,l-i1-i4) = 0.10000000000000003;
        BETA(l-i2-i1,l-i1-i0) = 0.6628077974810895;
        BETA(l-s1-i1,l-i1-i2) = 0.23719220251891038;
        BETA(l-i4-i1,l-i1-i2) = 0.10000000000000009;
        BETA(l-s1-i1,l-i1-i4) = 0.7732467293643676;
        BETA(l-i2-i1,l-i1-i4) = 0.1267532706356324;
        BETA(l-i2-i1,l-i1-s1) = 0.10000000000000003;
        BETA(l-i4-i1,l-i1-s1) = 0.7478369905604016;
        BETA(l-i4-i1,l-i1-i0) = 0.15216300943959837;
        BETA(l-s1-i1,l-i1-i0) = 0.09999999999999998;
        BETA(l-i1-i2,l-i2-s3) = 0.7875774166750967;
        BETA(l-i1-i2,l-i2-s2) = 0.11242258332490324;
        BETA(l-i1-i2,l-i2-i5) = 0.10000000000000003;
        BETA(l-s3-i2,l-i2-i1) = 0.6424635204570222;
        BETA(l-s2-i2,l-i2-s3) = 0.25753647954297776;
        BETA(l-i5-i2,l-i2-s3) = 0.10000000000000009;
        BETA(l-s2-i2,l-i2-i5) = 0.7516383725366121;
        BETA(l-s3-i2,l-i2-i5) = 0.14836162746338785;
        BETA(l-s3-i2,l-i2-s2) = 0.1;
        BETA(l-i5-i2,l-i2-s2) = 0.7372766750622718;
        BETA(l-i5-i2,l-i2-i1) = 0.16272332493772812;
        BETA(l-s2-i2,l-i2-i1) = 0.10000000000000009;
        BETA(l-s10-i3,l-i3-i4) = 0.635874165000506;
        BETA(l-s10-i3,l-i3-i0) = 0.26412583499949394;
        BETA(l-s10-i3,l-i3-i6) = 0.10000000000000009;
        BETA(l-i4-i3,l-i3-s10) = 0.6905187625504908;
        BETA(l-i0-i3,l-i3-i4) = 0.20948123744950908;
        BETA(l-i6-i3,l-i3-i4) = 0.10000000000000009;
        BETA(l-i0-i3,l-i3-i6) = 0.6442106711528135;
        BETA(l-i4-i3,l-i3-i6) = 0.2557893288471865;
        BETA(l-i4-i3,l-i3-i0) = 0.09999999999999998;
        BETA(l-i6-i3,l-i3-i0) = 0.6725096418446493;
        BETA(l-i6-i3,l-i3-s10) = 0.22749035815535062;
        BETA(l-i0-i3,l-i3-s10) = 0.10000000000000003;
        BETA(l-i3-i4,l-i4-i5) = 0.6622893476681472;
        BETA(l-i3-i4,l-i4-i1) = 0.2377106523318528;
        BETA(l-i3-i4,l-i4-i7) = 0.10000000000000003;
        BETA(l-i5-i4,l-i4-i3) = 0.781071586916273;
        BETA(l-i1-i4,l-i4-i5) = 0.11892841308372695;
        BETA(l-i7-i4,l-i4-i5) = 0.10000000000000006;
        BETA(l-i1-i4,l-i4-i7) = 0.6496831653631341;
        BETA(l-i5-i4,l-i4-i7) = 0.25031683463686594;
        BETA(l-i5-i4,l-i4-i1) = 0.09999999999999998;
        BETA(l-i7-i4,l-i4-i1) = 0.6850882492018668;
        BETA(l-i7-i4,l-i4-i3) = 0.21491175079813318;
        BETA(l-i1-i4,l-i4-i3) = 0.09999999999999998;
        BETA(l-i4-i5,l-i5-s4) = 0.6421980774557143;
        BETA(l-i4-i5,l-i5-i2) = 0.2578019225442856;
        BETA(l-i4-i5,l-i5-i8) = 0.10000000000000009;
        BETA(l-s4-i5,l-i5-i4) = 0.6948485342907407;
        BETA(l-i2-i5,l-i5-s4) = 0.20515146570925935;
        BETA(l-i8-i5,l-i5-s4) = 0.09999999999999998;
        BETA(l-i2-i5,l-i5-i8) = 0.730018384522377;
        BETA(l-s4-i5,l-i5-i8) = 0.16998161547762303;
        BETA(l-s4-i5,l-i5-i2) = 0.09999999999999998;
        BETA(l-i8-i5,l-i5-i2) = 0.7680414832011033;
        BETA(l-i8-i5,l-i5-i4) = 0.1319585167988967;
        BETA(l-i2-i5,l-i5-i4) = 0.09999999999999998;
        BETA(l-s9-i6,l-i6-i7) = 0.7015068609766241;
        BETA(l-s9-i6,l-i6-i3) = 0.1984931390233759;
        BETA(l-s9-i6,l-i6-s8) = 0.10000000000000003;
        BETA(l-i7-i6,l-i6-s9) = 0.6190422297102857;
        BETA(l-i3-i6,l-i6-i7) = 0.28095777028971425;
        BETA(l-s8-i6,l-i6-i7) = 0.10000000000000009;
        BETA(l-i3-i6,l-i6-s8) = 0.6650133466860366;
        BETA(l-i7-i6,l-i6-s8) = 0.2349866533139633;
        BETA(l-i7-i6,l-i6-i3) = 0.10000000000000009;
        BETA(l-s8-i6,l-i6-i3) = 0.7168416744009135;
        BETA(l-s8-i6,l-i6-s9) = 0.18315832559908643;
        BETA(l-i3-i6,l-i6-s9) = 0.10000000000000006;
        BETA(l-i6-i7,l-i7-i8) = 0.7201903046918289;
        BETA(l-i6-i7,l-i7-i4) = 0.17980969530817106;
        BETA(l-i6-i7,l-i7-s7) = 0.10000000000000006;
        BETA(l-i8-i7,l-i7-i6) = 0.6326942883023878;
        BETA(l-i4-i7,l-i7-i8) = 0.2673057116976121;
        BETA(l-s7-i7,l-i7-i8) = 0.10000000000000009;
        BETA(l-i4-i7,l-i7-s7) = 0.6265838293165428;
        BETA(l-i8-i7,l-i7-s7) = 0.2734161706834572;
        BETA(l-i8-i7,l-i7-i4) = 0.10000000000000003;
        BETA(l-s7-i7,l-i7-i4) = 0.7929191311141656;
        BETA(l-s7-i7,l-i7-i6) = 0.10708086888583437;
        BETA(l-i4-i7,l-i7-i6) = 0.10000000000000006;
        BETA(l-i7-i8,l-i8-s5) = 0.6053461286074496;
        BETA(l-i7-i8,l-i8-i5) = 0.29465387139255034;
        BETA(l-i7-i8,l-i8-s6) = 0.10000000000000003;
        BETA(l-s5-i8,l-i8-i7) = 0.7743275470089491;
        BETA(l-i5-i8,l-i8-s5) = 0.12567245299105081;
        BETA(l-s6-i8,l-i8-s5) = 0.10000000000000006;
        BETA(l-i5-i8,l-i8-s6) = 0.666574185929738;
        BETA(l-s5-i8,l-i8-s6) = 0.2334258140702619;
        BETA(l-s5-i8,l-i8-i5) = 0.10000000000000006;
        BETA(l-s6-i8,l-i8-i5) = 0.7737397920234579;
        BETA(l-s6-i8,l-i8-i7) = 0.12626020797654214;
        BETA(l-i5-i8,l-i8-i7) = 0.09999999999999998;
        //link lengths
        Dl(l-i0-s0) = 314.0;
        Dl(l-i0-i1) = 184.0;
        Dl(l-i0-i3) = 245.0;
        Dl(l-i0-s11) = 374.0;
        Dl(l-i1-s1) = 314.0;
        Dl(l-i1-i2) = 172.0;
        Dl(l-i1-i4) = 245.0;
        Dl(l-i1-i0) = 184.0;
        Dl(l-i2-s2) = 314.0;
        Dl(l-i2-s3) = 312.0;
        Dl(l-i2-i5) = 245.0;
        Dl(l-i2-i1) = 172.0;
        Dl(l-i3-i0) = 245.0;
        Dl(l-i3-i4) = 184.0;
        Dl(l-i3-i6) = 175.0;
        Dl(l-i3-s10) = 374.0;
        Dl(l-i4-i1) = 245.0;
        Dl(l-i4-i5) = 172.0;
        Dl(l-i4-i7) = 175.0;
        Dl(l-i4-i3) = 184.0;
        Dl(l-i5-i2) = 245.0;
        Dl(l-i5-s4) = 312.0;
        Dl(l-i5-i8) = 175.0;
        Dl(l-i5-i4) = 172.0;
        Dl(l-i6-i3) = 175.0;
        Dl(l-i6-i7) = 184.0;
        Dl(l-i6-s8) = 311.0;
        Dl(l-i6-s9) = 374.0;
        Dl(l-i7-i4) = 175.0;
        Dl(l-i7-i8) = 172.0;
        Dl(l-i7-s7) = 311.0;
        Dl(l-i7-i6) = 184.0;
        Dl(l-i8-i5) = 175.0;
        Dl(l-i8-s5) = 312.0;
        Dl(l-i8-s6) = 311.0;
        Dl(l-i8-i7) = 172.0;
        Dl(l-s0-i0) = 314.0;
        Dl(l-s8-i6) = 311.0;
        Dl(l-s1-i1) = 314.0;
        Dl(l-s7-i7) = 311.0;
        Dl(l-s2-i2) = 314.0;
        Dl(l-s6-i8) = 311.0;
        Dl(l-s11-i0) = 374.0;
        Dl(l-s3-i2) = 312.0;
        Dl(l-s10-i3) = 374.0;
        Dl(l-s4-i5) = 312.0;
        Dl(l-s9-i6) = 374.0;
        Dl(l-s5-i8) = 312.0;
        //source arrival rates
        SOURCE-ARRIVAL-RATE(l-s0-i0) = 0.37;
        SOURCE-ARRIVAL-RATE(l-s8-i6) = 0.28;
        SOURCE-ARRIVAL-RATE(l-s1-i1) = 0.35;
        SOURCE-ARRIVAL-RATE(l-s7-i7) = 0.25;
        SOURCE-ARRIVAL-RATE(l-s2-i2) = 0.35;
        SOURCE-ARRIVAL-RATE(l-s6-i8) = 0.29;
        SOURCE-ARRIVAL-RATE(l-s11-i0) = 0.28;
        SOURCE-ARRIVAL-RATE(l-s3-i2) = 0.4;
        SOURCE-ARRIVAL-RATE(l-s10-i3) = 0.24;
        SOURCE-ARRIVAL-RATE(l-s4-i5) = 0.3;
        SOURCE-ARRIVAL-RATE(l-s9-i6) = 0.29;
        SOURCE-ARRIVAL-RATE(l-s5-i8) = 0.33;
        
        //intersection i0
        //turns
        TURN(l-i1-i0,l-i0-s0);
        TURN(l-i1-i0,l-i0-s11);
        TURN(l-i1-i0,l-i0-i3);
        TURN(l-s0-i0,l-i0-s11);
        TURN(l-s0-i0,l-i0-i3);
        TURN(l-s0-i0,l-i0-i1);
        TURN(l-s11-i0,l-i0-i3);
        TURN(l-s11-i0,l-i0-i1);
        TURN(l-s11-i0,l-i0-s0);
        TURN(l-i3-i0,l-i0-i1);
        TURN(l-i3-i0,l-i0-s0);
        TURN(l-i3-i0,l-i0-s11);
        //link-to
        LINK-TO(l-i1-i0,i0);
        LINK-TO(l-s0-i0,i0);
        LINK-TO(l-s11-i0,i0);
        LINK-TO(l-i3-i0,i0);
        //link-from
        LINK-FROM(i0,l-i0-i1);
        LINK-FROM(i0,l-i0-s0);
        LINK-FROM(i0,l-i0-s11);
        LINK-FROM(i0,l-i0-i3);
        //phase properties
        PHASE-MIN(i0) = 7;
        PHASE-MAX(i0) = 60;
        PHASE-ALL-RED-DUR(i0) = 4;
        //green turns
        GREEN(l-i1-i0,l-i0-i3,@WEST-EAST-LEFT);
        GREEN(l-s11-i0,l-i0-s0,@WEST-EAST-LEFT);
        GREEN(l-i1-i0,l-i0-s11,@WEST-EAST-THROUGH);
        GREEN(l-s11-i0,l-i0-i1,@WEST-EAST-THROUGH);
        GREEN(l-s0-i0,l-i0-i1,@NORTH-SOUTH-LEFT);
        GREEN(l-i3-i0,l-i0-s11,@NORTH-SOUTH-LEFT);
        GREEN(l-s0-i0,l-i0-i3,@NORTH-SOUTH-THROUGH);
        GREEN(l-i3-i0,l-i0-s0,@NORTH-SOUTH-THROUGH);
        GREEN(l-i1-i0,l-i0-s0,@WEST-EAST-LEFT);
        GREEN(l-i1-i0,l-i0-s0,@WEST-EAST-THROUGH);
        GREEN(l-i1-i0,l-i0-s0,@NORTH-SOUTH-LEFT);
        GREEN(l-i1-i0,l-i0-s0,@NORTH-SOUTH-THROUGH);
        GREEN(l-s0-i0,l-i0-s11,@WEST-EAST-LEFT);
        GREEN(l-s0-i0,l-i0-s11,@WEST-EAST-THROUGH);
        GREEN(l-s0-i0,l-i0-s11,@NORTH-SOUTH-LEFT);
        GREEN(l-s0-i0,l-i0-s11,@NORTH-SOUTH-THROUGH);
        GREEN(l-s11-i0,l-i0-i3,@WEST-EAST-LEFT);
        GREEN(l-s11-i0,l-i0-i3,@WEST-EAST-THROUGH);
        GREEN(l-s11-i0,l-i0-i3,@NORTH-SOUTH-LEFT);
        GREEN(l-s11-i0,l-i0-i3,@NORTH-SOUTH-THROUGH);
        GREEN(l-i3-i0,l-i0-i1,@WEST-EAST-LEFT);
        GREEN(l-i3-i0,l-i0-i1,@WEST-EAST-THROUGH);
        GREEN(l-i3-i0,l-i0-i1,@NORTH-SOUTH-LEFT);
        GREEN(l-i3-i0,l-i0-i1,@NORTH-SOUTH-THROUGH);
        GREEN(l-i1-i0,l-i0-s0,@ALL-RED);
        GREEN(l-i1-i0,l-i0-s0,@ALL-RED2);
        GREEN(l-i1-i0,l-i0-s0,@ALL-RED3);
        GREEN(l-i1-i0,l-i0-s0,@ALL-RED4);
        GREEN(l-s0-i0,l-i0-s11,@ALL-RED);
        GREEN(l-s0-i0,l-i0-s11,@ALL-RED2);
        GREEN(l-s0-i0,l-i0-s11,@ALL-RED3);
        GREEN(l-s0-i0,l-i0-s11,@ALL-RED4);
        GREEN(l-s11-i0,l-i0-i3,@ALL-RED);
        GREEN(l-s11-i0,l-i0-i3,@ALL-RED2);
        GREEN(l-s11-i0,l-i0-i3,@ALL-RED3);
        GREEN(l-s11-i0,l-i0-i3,@ALL-RED4);
        GREEN(l-i3-i0,l-i0-i1,@ALL-RED);
        GREEN(l-i3-i0,l-i0-i1,@ALL-RED2);
        GREEN(l-i3-i0,l-i0-i1,@ALL-RED3);
        GREEN(l-i3-i0,l-i0-i1,@ALL-RED4);
        
        //intersection i1
        //turns
        TURN(l-i2-i1,l-i1-s1);
        TURN(l-i2-i1,l-i1-i0);
        TURN(l-i2-i1,l-i1-i4);
        TURN(l-s1-i1,l-i1-i0);
        TURN(l-s1-i1,l-i1-i4);
        TURN(l-s1-i1,l-i1-i2);
        TURN(l-i0-i1,l-i1-i4);
        TURN(l-i0-i1,l-i1-i2);
        TURN(l-i0-i1,l-i1-s1);
        TURN(l-i4-i1,l-i1-i2);
        TURN(l-i4-i1,l-i1-s1);
        TURN(l-i4-i1,l-i1-i0);
        //link-to
        LINK-TO(l-i2-i1,i1);
        LINK-TO(l-s1-i1,i1);
        LINK-TO(l-i0-i1,i1);
        LINK-TO(l-i4-i1,i1);
        //link-from
        LINK-FROM(i1,l-i1-i2);
        LINK-FROM(i1,l-i1-s1);
        LINK-FROM(i1,l-i1-i0);
        LINK-FROM(i1,l-i1-i4);
        //phase properties
        PHASE-MIN(i1) = 7;
        PHASE-MAX(i1) = 60;
        PHASE-ALL-RED-DUR(i1) = 4;
        //green turns
        GREEN(l-i2-i1,l-i1-i4,@WEST-EAST-LEFT);
        GREEN(l-i0-i1,l-i1-s1,@WEST-EAST-LEFT);
        GREEN(l-i2-i1,l-i1-i0,@WEST-EAST-THROUGH);
        GREEN(l-i0-i1,l-i1-i2,@WEST-EAST-THROUGH);
        GREEN(l-s1-i1,l-i1-i2,@NORTH-SOUTH-LEFT);
        GREEN(l-i4-i1,l-i1-i0,@NORTH-SOUTH-LEFT);
        GREEN(l-s1-i1,l-i1-i4,@NORTH-SOUTH-THROUGH);
        GREEN(l-i4-i1,l-i1-s1,@NORTH-SOUTH-THROUGH);
        GREEN(l-i2-i1,l-i1-s1,@WEST-EAST-LEFT);
        GREEN(l-i2-i1,l-i1-s1,@WEST-EAST-THROUGH);
        GREEN(l-i2-i1,l-i1-s1,@NORTH-SOUTH-LEFT);
        GREEN(l-i2-i1,l-i1-s1,@NORTH-SOUTH-THROUGH);
        GREEN(l-s1-i1,l-i1-i0,@WEST-EAST-LEFT);
        GREEN(l-s1-i1,l-i1-i0,@WEST-EAST-THROUGH);
        GREEN(l-s1-i1,l-i1-i0,@NORTH-SOUTH-LEFT);
        GREEN(l-s1-i1,l-i1-i0,@NORTH-SOUTH-THROUGH);
        GREEN(l-i0-i1,l-i1-i4,@WEST-EAST-LEFT);
        GREEN(l-i0-i1,l-i1-i4,@WEST-EAST-THROUGH);
        GREEN(l-i0-i1,l-i1-i4,@NORTH-SOUTH-LEFT);
        GREEN(l-i0-i1,l-i1-i4,@NORTH-SOUTH-THROUGH);
        GREEN(l-i4-i1,l-i1-i2,@WEST-EAST-LEFT);
        GREEN(l-i4-i1,l-i1-i2,@WEST-EAST-THROUGH);
        GREEN(l-i4-i1,l-i1-i2,@NORTH-SOUTH-LEFT);
        GREEN(l-i4-i1,l-i1-i2,@NORTH-SOUTH-THROUGH);
        GREEN(l-i2-i1,l-i1-s1,@ALL-RED);
        GREEN(l-i2-i1,l-i1-s1,@ALL-RED2);
        GREEN(l-i2-i1,l-i1-s1,@ALL-RED3);
        GREEN(l-i2-i1,l-i1-s1,@ALL-RED4);
        GREEN(l-s1-i1,l-i1-i0,@ALL-RED);
        GREEN(l-s1-i1,l-i1-i0,@ALL-RED2);
        GREEN(l-s1-i1,l-i1-i0,@ALL-RED3);
        GREEN(l-s1-i1,l-i1-i0,@ALL-RED4);
        GREEN(l-i0-i1,l-i1-i4,@ALL-RED);
        GREEN(l-i0-i1,l-i1-i4,@ALL-RED2);
        GREEN(l-i0-i1,l-i1-i4,@ALL-RED3);
        GREEN(l-i0-i1,l-i1-i4,@ALL-RED4);
        GREEN(l-i4-i1,l-i1-i2,@ALL-RED);
        GREEN(l-i4-i1,l-i1-i2,@ALL-RED2);
        GREEN(l-i4-i1,l-i1-i2,@ALL-RED3);
        GREEN(l-i4-i1,l-i1-i2,@ALL-RED4);
        
        //intersection i2
        //turns
        TURN(l-s3-i2,l-i2-s2);
        TURN(l-s3-i2,l-i2-i1);
        TURN(l-s3-i2,l-i2-i5);
        TURN(l-s2-i2,l-i2-i1);
        TURN(l-s2-i2,l-i2-i5);
        TURN(l-s2-i2,l-i2-s3);
        TURN(l-i1-i2,l-i2-i5);
        TURN(l-i1-i2,l-i2-s3);
        TURN(l-i1-i2,l-i2-s2);
        TURN(l-i5-i2,l-i2-s3);
        TURN(l-i5-i2,l-i2-s2);
        TURN(l-i5-i2,l-i2-i1);
        //link-to
        LINK-TO(l-s3-i2,i2);
        LINK-TO(l-s2-i2,i2);
        LINK-TO(l-i1-i2,i2);
        LINK-TO(l-i5-i2,i2);
        //link-from
        LINK-FROM(i2,l-i2-s3);
        LINK-FROM(i2,l-i2-s2);
        LINK-FROM(i2,l-i2-i1);
        LINK-FROM(i2,l-i2-i5);
        //phase properties
        PHASE-MIN(i2) = 7;
        PHASE-MAX(i2) = 60;
        PHASE-ALL-RED-DUR(i2) = 4;
        //green turns
        GREEN(l-s3-i2,l-i2-i5,@WEST-EAST-LEFT);
        GREEN(l-i1-i2,l-i2-s2,@WEST-EAST-LEFT);
        GREEN(l-s3-i2,l-i2-i1,@WEST-EAST-THROUGH);
        GREEN(l-i1-i2,l-i2-s3,@WEST-EAST-THROUGH);
        GREEN(l-s2-i2,l-i2-s3,@NORTH-SOUTH-LEFT);
        GREEN(l-i5-i2,l-i2-i1,@NORTH-SOUTH-LEFT);
        GREEN(l-s2-i2,l-i2-i5,@NORTH-SOUTH-THROUGH);
        GREEN(l-i5-i2,l-i2-s2,@NORTH-SOUTH-THROUGH);
        GREEN(l-s3-i2,l-i2-s2,@WEST-EAST-LEFT);
        GREEN(l-s3-i2,l-i2-s2,@WEST-EAST-THROUGH);
        GREEN(l-s3-i2,l-i2-s2,@NORTH-SOUTH-LEFT);
        GREEN(l-s3-i2,l-i2-s2,@NORTH-SOUTH-THROUGH);
        GREEN(l-s2-i2,l-i2-i1,@WEST-EAST-LEFT);
        GREEN(l-s2-i2,l-i2-i1,@WEST-EAST-THROUGH);
        GREEN(l-s2-i2,l-i2-i1,@NORTH-SOUTH-LEFT);
        GREEN(l-s2-i2,l-i2-i1,@NORTH-SOUTH-THROUGH);
        GREEN(l-i1-i2,l-i2-i5,@WEST-EAST-LEFT);
        GREEN(l-i1-i2,l-i2-i5,@WEST-EAST-THROUGH);
        GREEN(l-i1-i2,l-i2-i5,@NORTH-SOUTH-LEFT);
        GREEN(l-i1-i2,l-i2-i5,@NORTH-SOUTH-THROUGH);
        GREEN(l-i5-i2,l-i2-s3,@WEST-EAST-LEFT);
        GREEN(l-i5-i2,l-i2-s3,@WEST-EAST-THROUGH);
        GREEN(l-i5-i2,l-i2-s3,@NORTH-SOUTH-LEFT);
        GREEN(l-i5-i2,l-i2-s3,@NORTH-SOUTH-THROUGH);
        GREEN(l-s3-i2,l-i2-s2,@ALL-RED);
        GREEN(l-s3-i2,l-i2-s2,@ALL-RED2);
        GREEN(l-s3-i2,l-i2-s2,@ALL-RED3);
        GREEN(l-s3-i2,l-i2-s2,@ALL-RED4);
        GREEN(l-s2-i2,l-i2-i1,@ALL-RED);
        GREEN(l-s2-i2,l-i2-i1,@ALL-RED2);
        GREEN(l-s2-i2,l-i2-i1,@ALL-RED3);
        GREEN(l-s2-i2,l-i2-i1,@ALL-RED4);
        GREEN(l-i1-i2,l-i2-i5,@ALL-RED);
        GREEN(l-i1-i2,l-i2-i5,@ALL-RED2);
        GREEN(l-i1-i2,l-i2-i5,@ALL-RED3);
        GREEN(l-i1-i2,l-i2-i5,@ALL-RED4);
        GREEN(l-i5-i2,l-i2-s3,@ALL-RED);
        GREEN(l-i5-i2,l-i2-s3,@ALL-RED2);
        GREEN(l-i5-i2,l-i2-s3,@ALL-RED3);
        GREEN(l-i5-i2,l-i2-s3,@ALL-RED4);
        
        //intersection i3
        //turns
        TURN(l-i4-i3,l-i3-i0);
        TURN(l-i4-i3,l-i3-s10);
        TURN(l-i4-i3,l-i3-i6);
        TURN(l-i0-i3,l-i3-s10);
        TURN(l-i0-i3,l-i3-i6);
        TURN(l-i0-i3,l-i3-i4);
        TURN(l-s10-i3,l-i3-i6);
        TURN(l-s10-i3,l-i3-i4);
        TURN(l-s10-i3,l-i3-i0);
        TURN(l-i6-i3,l-i3-i4);
        TURN(l-i6-i3,l-i3-i0);
        TURN(l-i6-i3,l-i3-s10);
        //link-to
        LINK-TO(l-i4-i3,i3);
        LINK-TO(l-i0-i3,i3);
        LINK-TO(l-s10-i3,i3);
        LINK-TO(l-i6-i3,i3);
        //link-from
        LINK-FROM(i3,l-i3-i4);
        LINK-FROM(i3,l-i3-i0);
        LINK-FROM(i3,l-i3-s10);
        LINK-FROM(i3,l-i3-i6);
        //phase properties
        PHASE-MIN(i3) = 7;
        PHASE-MAX(i3) = 60;
        PHASE-ALL-RED-DUR(i3) = 4;
        //green turns
        GREEN(l-i4-i3,l-i3-i6,@WEST-EAST-LEFT);
        GREEN(l-s10-i3,l-i3-i0,@WEST-EAST-LEFT);
        GREEN(l-i4-i3,l-i3-s10,@WEST-EAST-THROUGH);
        GREEN(l-s10-i3,l-i3-i4,@WEST-EAST-THROUGH);
        GREEN(l-i0-i3,l-i3-i4,@NORTH-SOUTH-LEFT);
        GREEN(l-i6-i3,l-i3-s10,@NORTH-SOUTH-LEFT);
        GREEN(l-i0-i3,l-i3-i6,@NORTH-SOUTH-THROUGH);
        GREEN(l-i6-i3,l-i3-i0,@NORTH-SOUTH-THROUGH);
        GREEN(l-i4-i3,l-i3-i0,@WEST-EAST-LEFT);
        GREEN(l-i4-i3,l-i3-i0,@WEST-EAST-THROUGH);
        GREEN(l-i4-i3,l-i3-i0,@NORTH-SOUTH-LEFT);
        GREEN(l-i4-i3,l-i3-i0,@NORTH-SOUTH-THROUGH);
        GREEN(l-i0-i3,l-i3-s10,@WEST-EAST-LEFT);
        GREEN(l-i0-i3,l-i3-s10,@WEST-EAST-THROUGH);
        GREEN(l-i0-i3,l-i3-s10,@NORTH-SOUTH-LEFT);
        GREEN(l-i0-i3,l-i3-s10,@NORTH-SOUTH-THROUGH);
        GREEN(l-s10-i3,l-i3-i6,@WEST-EAST-LEFT);
        GREEN(l-s10-i3,l-i3-i6,@WEST-EAST-THROUGH);
        GREEN(l-s10-i3,l-i3-i6,@NORTH-SOUTH-LEFT);
        GREEN(l-s10-i3,l-i3-i6,@NORTH-SOUTH-THROUGH);
        GREEN(l-i6-i3,l-i3-i4,@WEST-EAST-LEFT);
        GREEN(l-i6-i3,l-i3-i4,@WEST-EAST-THROUGH);
        GREEN(l-i6-i3,l-i3-i4,@NORTH-SOUTH-LEFT);
        GREEN(l-i6-i3,l-i3-i4,@NORTH-SOUTH-THROUGH);
        GREEN(l-i4-i3,l-i3-i0,@ALL-RED);
        GREEN(l-i4-i3,l-i3-i0,@ALL-RED2);
        GREEN(l-i4-i3,l-i3-i0,@ALL-RED3);
        GREEN(l-i4-i3,l-i3-i0,@ALL-RED4);
        GREEN(l-i0-i3,l-i3-s10,@ALL-RED);
        GREEN(l-i0-i3,l-i3-s10,@ALL-RED2);
        GREEN(l-i0-i3,l-i3-s10,@ALL-RED3);
        GREEN(l-i0-i3,l-i3-s10,@ALL-RED4);
        GREEN(l-s10-i3,l-i3-i6,@ALL-RED);
        GREEN(l-s10-i3,l-i3-i6,@ALL-RED2);
        GREEN(l-s10-i3,l-i3-i6,@ALL-RED3);
        GREEN(l-s10-i3,l-i3-i6,@ALL-RED4);
        GREEN(l-i6-i3,l-i3-i4,@ALL-RED);
        GREEN(l-i6-i3,l-i3-i4,@ALL-RED2);
        GREEN(l-i6-i3,l-i3-i4,@ALL-RED3);
        GREEN(l-i6-i3,l-i3-i4,@ALL-RED4);
        
        //intersection i4
        //turns
        TURN(l-i5-i4,l-i4-i1);
        TURN(l-i5-i4,l-i4-i3);
        TURN(l-i5-i4,l-i4-i7);
        TURN(l-i1-i4,l-i4-i3);
        TURN(l-i1-i4,l-i4-i7);
        TURN(l-i1-i4,l-i4-i5);
        TURN(l-i3-i4,l-i4-i7);
        TURN(l-i3-i4,l-i4-i5);
        TURN(l-i3-i4,l-i4-i1);
        TURN(l-i7-i4,l-i4-i5);
        TURN(l-i7-i4,l-i4-i1);
        TURN(l-i7-i4,l-i4-i3);
        //link-to
        LINK-TO(l-i5-i4,i4);
        LINK-TO(l-i1-i4,i4);
        LINK-TO(l-i3-i4,i4);
        LINK-TO(l-i7-i4,i4);
        //link-from
        LINK-FROM(i4,l-i4-i5);
        LINK-FROM(i4,l-i4-i1);
        LINK-FROM(i4,l-i4-i3);
        LINK-FROM(i4,l-i4-i7);
        //phase properties
        PHASE-MIN(i4) = 7;
        PHASE-MAX(i4) = 60;
        PHASE-ALL-RED-DUR(i4) = 4;
        //green turns
        GREEN(l-i5-i4,l-i4-i7,@WEST-EAST-LEFT);
        GREEN(l-i3-i4,l-i4-i1,@WEST-EAST-LEFT);
        GREEN(l-i5-i4,l-i4-i3,@WEST-EAST-THROUGH);
        GREEN(l-i3-i4,l-i4-i5,@WEST-EAST-THROUGH);
        GREEN(l-i1-i4,l-i4-i5,@NORTH-SOUTH-LEFT);
        GREEN(l-i7-i4,l-i4-i3,@NORTH-SOUTH-LEFT);
        GREEN(l-i1-i4,l-i4-i7,@NORTH-SOUTH-THROUGH);
        GREEN(l-i7-i4,l-i4-i1,@NORTH-SOUTH-THROUGH);
        GREEN(l-i5-i4,l-i4-i1,@WEST-EAST-LEFT);
        GREEN(l-i5-i4,l-i4-i1,@WEST-EAST-THROUGH);
        GREEN(l-i5-i4,l-i4-i1,@NORTH-SOUTH-LEFT);
        GREEN(l-i5-i4,l-i4-i1,@NORTH-SOUTH-THROUGH);
        GREEN(l-i1-i4,l-i4-i3,@WEST-EAST-LEFT);
        GREEN(l-i1-i4,l-i4-i3,@WEST-EAST-THROUGH);
        GREEN(l-i1-i4,l-i4-i3,@NORTH-SOUTH-LEFT);
        GREEN(l-i1-i4,l-i4-i3,@NORTH-SOUTH-THROUGH);
        GREEN(l-i3-i4,l-i4-i7,@WEST-EAST-LEFT);
        GREEN(l-i3-i4,l-i4-i7,@WEST-EAST-THROUGH);
        GREEN(l-i3-i4,l-i4-i7,@NORTH-SOUTH-LEFT);
        GREEN(l-i3-i4,l-i4-i7,@NORTH-SOUTH-THROUGH);
        GREEN(l-i7-i4,l-i4-i5,@WEST-EAST-LEFT);
        GREEN(l-i7-i4,l-i4-i5,@WEST-EAST-THROUGH);
        GREEN(l-i7-i4,l-i4-i5,@NORTH-SOUTH-LEFT);
        GREEN(l-i7-i4,l-i4-i5,@NORTH-SOUTH-THROUGH);
        GREEN(l-i5-i4,l-i4-i1,@ALL-RED);
        GREEN(l-i5-i4,l-i4-i1,@ALL-RED2);
        GREEN(l-i5-i4,l-i4-i1,@ALL-RED3);
        GREEN(l-i5-i4,l-i4-i1,@ALL-RED4);
        GREEN(l-i1-i4,l-i4-i3,@ALL-RED);
        GREEN(l-i1-i4,l-i4-i3,@ALL-RED2);
        GREEN(l-i1-i4,l-i4-i3,@ALL-RED3);
        GREEN(l-i1-i4,l-i4-i3,@ALL-RED4);
        GREEN(l-i3-i4,l-i4-i7,@ALL-RED);
        GREEN(l-i3-i4,l-i4-i7,@ALL-RED2);
        GREEN(l-i3-i4,l-i4-i7,@ALL-RED3);
        GREEN(l-i3-i4,l-i4-i7,@ALL-RED4);
        GREEN(l-i7-i4,l-i4-i5,@ALL-RED);
        GREEN(l-i7-i4,l-i4-i5,@ALL-RED2);
        GREEN(l-i7-i4,l-i4-i5,@ALL-RED3);
        GREEN(l-i7-i4,l-i4-i5,@ALL-RED4);
        
        //intersection i5
        //turns
        TURN(l-s4-i5,l-i5-i2);
        TURN(l-s4-i5,l-i5-i4);
        TURN(l-s4-i5,l-i5-i8);
        TURN(l-i2-i5,l-i5-i4);
        TURN(l-i2-i5,l-i5-i8);
        TURN(l-i2-i5,l-i5-s4);
        TURN(l-i4-i5,l-i5-i8);
        TURN(l-i4-i5,l-i5-s4);
        TURN(l-i4-i5,l-i5-i2);
        TURN(l-i8-i5,l-i5-s4);
        TURN(l-i8-i5,l-i5-i2);
        TURN(l-i8-i5,l-i5-i4);
        //link-to
        LINK-TO(l-s4-i5,i5);
        LINK-TO(l-i2-i5,i5);
        LINK-TO(l-i4-i5,i5);
        LINK-TO(l-i8-i5,i5);
        //link-from
        LINK-FROM(i5,l-i5-s4);
        LINK-FROM(i5,l-i5-i2);
        LINK-FROM(i5,l-i5-i4);
        LINK-FROM(i5,l-i5-i8);
        //phase properties
        PHASE-MIN(i5) = 7;
        PHASE-MAX(i5) = 60;
        PHASE-ALL-RED-DUR(i5) = 4;
        //green turns
        GREEN(l-s4-i5,l-i5-i8,@WEST-EAST-LEFT);
        GREEN(l-i4-i5,l-i5-i2,@WEST-EAST-LEFT);
        GREEN(l-s4-i5,l-i5-i4,@WEST-EAST-THROUGH);
        GREEN(l-i4-i5,l-i5-s4,@WEST-EAST-THROUGH);
        GREEN(l-i2-i5,l-i5-s4,@NORTH-SOUTH-LEFT);
        GREEN(l-i8-i5,l-i5-i4,@NORTH-SOUTH-LEFT);
        GREEN(l-i2-i5,l-i5-i8,@NORTH-SOUTH-THROUGH);
        GREEN(l-i8-i5,l-i5-i2,@NORTH-SOUTH-THROUGH);
        GREEN(l-s4-i5,l-i5-i2,@WEST-EAST-LEFT);
        GREEN(l-s4-i5,l-i5-i2,@WEST-EAST-THROUGH);
        GREEN(l-s4-i5,l-i5-i2,@NORTH-SOUTH-LEFT);
        GREEN(l-s4-i5,l-i5-i2,@NORTH-SOUTH-THROUGH);
        GREEN(l-i2-i5,l-i5-i4,@WEST-EAST-LEFT);
        GREEN(l-i2-i5,l-i5-i4,@WEST-EAST-THROUGH);
        GREEN(l-i2-i5,l-i5-i4,@NORTH-SOUTH-LEFT);
        GREEN(l-i2-i5,l-i5-i4,@NORTH-SOUTH-THROUGH);
        GREEN(l-i4-i5,l-i5-i8,@WEST-EAST-LEFT);
        GREEN(l-i4-i5,l-i5-i8,@WEST-EAST-THROUGH);
        GREEN(l-i4-i5,l-i5-i8,@NORTH-SOUTH-LEFT);
        GREEN(l-i4-i5,l-i5-i8,@NORTH-SOUTH-THROUGH);
        GREEN(l-i8-i5,l-i5-s4,@WEST-EAST-LEFT);
        GREEN(l-i8-i5,l-i5-s4,@WEST-EAST-THROUGH);
        GREEN(l-i8-i5,l-i5-s4,@NORTH-SOUTH-LEFT);
        GREEN(l-i8-i5,l-i5-s4,@NORTH-SOUTH-THROUGH);
        GREEN(l-s4-i5,l-i5-i2,@ALL-RED);
        GREEN(l-s4-i5,l-i5-i2,@ALL-RED2);
        GREEN(l-s4-i5,l-i5-i2,@ALL-RED3);
        GREEN(l-s4-i5,l-i5-i2,@ALL-RED4);
        GREEN(l-i2-i5,l-i5-i4,@ALL-RED);
        GREEN(l-i2-i5,l-i5-i4,@ALL-RED2);
        GREEN(l-i2-i5,l-i5-i4,@ALL-RED3);
        GREEN(l-i2-i5,l-i5-i4,@ALL-RED4);
        GREEN(l-i4-i5,l-i5-i8,@ALL-RED);
        GREEN(l-i4-i5,l-i5-i8,@ALL-RED2);
        GREEN(l-i4-i5,l-i5-i8,@ALL-RED3);
        GREEN(l-i4-i5,l-i5-i8,@ALL-RED4);
        GREEN(l-i8-i5,l-i5-s4,@ALL-RED);
        GREEN(l-i8-i5,l-i5-s4,@ALL-RED2);
        GREEN(l-i8-i5,l-i5-s4,@ALL-RED3);
        GREEN(l-i8-i5,l-i5-s4,@ALL-RED4);
        
        //intersection i6
        //turns
        TURN(l-i7-i6,l-i6-i3);
        TURN(l-i7-i6,l-i6-s9);
        TURN(l-i7-i6,l-i6-s8);
        TURN(l-i3-i6,l-i6-s9);
        TURN(l-i3-i6,l-i6-s8);
        TURN(l-i3-i6,l-i6-i7);
        TURN(l-s9-i6,l-i6-s8);
        TURN(l-s9-i6,l-i6-i7);
        TURN(l-s9-i6,l-i6-i3);
        TURN(l-s8-i6,l-i6-i7);
        TURN(l-s8-i6,l-i6-i3);
        TURN(l-s8-i6,l-i6-s9);
        //link-to
        LINK-TO(l-i7-i6,i6);
        LINK-TO(l-i3-i6,i6);
        LINK-TO(l-s9-i6,i6);
        LINK-TO(l-s8-i6,i6);
        //link-from
        LINK-FROM(i6,l-i6-i7);
        LINK-FROM(i6,l-i6-i3);
        LINK-FROM(i6,l-i6-s9);
        LINK-FROM(i6,l-i6-s8);
        //phase properties
        PHASE-MIN(i6) = 7;
        PHASE-MAX(i6) = 60;
        PHASE-ALL-RED-DUR(i6) = 4;
        //green turns
        GREEN(l-i7-i6,l-i6-s8,@WEST-EAST-LEFT);
        GREEN(l-s9-i6,l-i6-i3,@WEST-EAST-LEFT);
        GREEN(l-i7-i6,l-i6-s9,@WEST-EAST-THROUGH);
        GREEN(l-s9-i6,l-i6-i7,@WEST-EAST-THROUGH);
        GREEN(l-i3-i6,l-i6-i7,@NORTH-SOUTH-LEFT);
        GREEN(l-s8-i6,l-i6-s9,@NORTH-SOUTH-LEFT);
        GREEN(l-i3-i6,l-i6-s8,@NORTH-SOUTH-THROUGH);
        GREEN(l-s8-i6,l-i6-i3,@NORTH-SOUTH-THROUGH);
        GREEN(l-i7-i6,l-i6-i3,@WEST-EAST-LEFT);
        GREEN(l-i7-i6,l-i6-i3,@WEST-EAST-THROUGH);
        GREEN(l-i7-i6,l-i6-i3,@NORTH-SOUTH-LEFT);
        GREEN(l-i7-i6,l-i6-i3,@NORTH-SOUTH-THROUGH);
        GREEN(l-i3-i6,l-i6-s9,@WEST-EAST-LEFT);
        GREEN(l-i3-i6,l-i6-s9,@WEST-EAST-THROUGH);
        GREEN(l-i3-i6,l-i6-s9,@NORTH-SOUTH-LEFT);
        GREEN(l-i3-i6,l-i6-s9,@NORTH-SOUTH-THROUGH);
        GREEN(l-s9-i6,l-i6-s8,@WEST-EAST-LEFT);
        GREEN(l-s9-i6,l-i6-s8,@WEST-EAST-THROUGH);
        GREEN(l-s9-i6,l-i6-s8,@NORTH-SOUTH-LEFT);
        GREEN(l-s9-i6,l-i6-s8,@NORTH-SOUTH-THROUGH);
        GREEN(l-s8-i6,l-i6-i7,@WEST-EAST-LEFT);
        GREEN(l-s8-i6,l-i6-i7,@WEST-EAST-THROUGH);
        GREEN(l-s8-i6,l-i6-i7,@NORTH-SOUTH-LEFT);
        GREEN(l-s8-i6,l-i6-i7,@NORTH-SOUTH-THROUGH);
        GREEN(l-i7-i6,l-i6-i3,@ALL-RED);
        GREEN(l-i7-i6,l-i6-i3,@ALL-RED2);
        GREEN(l-i7-i6,l-i6-i3,@ALL-RED3);
        GREEN(l-i7-i6,l-i6-i3,@ALL-RED4);
        GREEN(l-i3-i6,l-i6-s9,@ALL-RED);
        GREEN(l-i3-i6,l-i6-s9,@ALL-RED2);
        GREEN(l-i3-i6,l-i6-s9,@ALL-RED3);
        GREEN(l-i3-i6,l-i6-s9,@ALL-RED4);
        GREEN(l-s9-i6,l-i6-s8,@ALL-RED);
        GREEN(l-s9-i6,l-i6-s8,@ALL-RED2);
        GREEN(l-s9-i6,l-i6-s8,@ALL-RED3);
        GREEN(l-s9-i6,l-i6-s8,@ALL-RED4);
        GREEN(l-s8-i6,l-i6-i7,@ALL-RED);
        GREEN(l-s8-i6,l-i6-i7,@ALL-RED2);
        GREEN(l-s8-i6,l-i6-i7,@ALL-RED3);
        GREEN(l-s8-i6,l-i6-i7,@ALL-RED4);
        
        //intersection i7
        //turns
        TURN(l-i8-i7,l-i7-i4);
        TURN(l-i8-i7,l-i7-i6);
        TURN(l-i8-i7,l-i7-s7);
        TURN(l-i4-i7,l-i7-i6);
        TURN(l-i4-i7,l-i7-s7);
        TURN(l-i4-i7,l-i7-i8);
        TURN(l-i6-i7,l-i7-s7);
        TURN(l-i6-i7,l-i7-i8);
        TURN(l-i6-i7,l-i7-i4);
        TURN(l-s7-i7,l-i7-i8);
        TURN(l-s7-i7,l-i7-i4);
        TURN(l-s7-i7,l-i7-i6);
        //link-to
        LINK-TO(l-i8-i7,i7);
        LINK-TO(l-i4-i7,i7);
        LINK-TO(l-i6-i7,i7);
        LINK-TO(l-s7-i7,i7);
        //link-from
        LINK-FROM(i7,l-i7-i8);
        LINK-FROM(i7,l-i7-i4);
        LINK-FROM(i7,l-i7-i6);
        LINK-FROM(i7,l-i7-s7);
        //phase properties
        PHASE-MIN(i7) = 7;
        PHASE-MAX(i7) = 60;
        PHASE-ALL-RED-DUR(i7) = 4;
        //green turns
        GREEN(l-i8-i7,l-i7-s7,@WEST-EAST-LEFT);
        GREEN(l-i6-i7,l-i7-i4,@WEST-EAST-LEFT);
        GREEN(l-i8-i7,l-i7-i6,@WEST-EAST-THROUGH);
        GREEN(l-i6-i7,l-i7-i8,@WEST-EAST-THROUGH);
        GREEN(l-i4-i7,l-i7-i8,@NORTH-SOUTH-LEFT);
        GREEN(l-s7-i7,l-i7-i6,@NORTH-SOUTH-LEFT);
        GREEN(l-i4-i7,l-i7-s7,@NORTH-SOUTH-THROUGH);
        GREEN(l-s7-i7,l-i7-i4,@NORTH-SOUTH-THROUGH);
        GREEN(l-i8-i7,l-i7-i4,@WEST-EAST-LEFT);
        GREEN(l-i8-i7,l-i7-i4,@WEST-EAST-THROUGH);
        GREEN(l-i8-i7,l-i7-i4,@NORTH-SOUTH-LEFT);
        GREEN(l-i8-i7,l-i7-i4,@NORTH-SOUTH-THROUGH);
        GREEN(l-i4-i7,l-i7-i6,@WEST-EAST-LEFT);
        GREEN(l-i4-i7,l-i7-i6,@WEST-EAST-THROUGH);
        GREEN(l-i4-i7,l-i7-i6,@NORTH-SOUTH-LEFT);
        GREEN(l-i4-i7,l-i7-i6,@NORTH-SOUTH-THROUGH);
        GREEN(l-i6-i7,l-i7-s7,@WEST-EAST-LEFT);
        GREEN(l-i6-i7,l-i7-s7,@WEST-EAST-THROUGH);
        GREEN(l-i6-i7,l-i7-s7,@NORTH-SOUTH-LEFT);
        GREEN(l-i6-i7,l-i7-s7,@NORTH-SOUTH-THROUGH);
        GREEN(l-s7-i7,l-i7-i8,@WEST-EAST-LEFT);
        GREEN(l-s7-i7,l-i7-i8,@WEST-EAST-THROUGH);
        GREEN(l-s7-i7,l-i7-i8,@NORTH-SOUTH-LEFT);
        GREEN(l-s7-i7,l-i7-i8,@NORTH-SOUTH-THROUGH);
        GREEN(l-i8-i7,l-i7-i4,@ALL-RED);
        GREEN(l-i8-i7,l-i7-i4,@ALL-RED2);
        GREEN(l-i8-i7,l-i7-i4,@ALL-RED3);
        GREEN(l-i8-i7,l-i7-i4,@ALL-RED4);
        GREEN(l-i4-i7,l-i7-i6,@ALL-RED);
        GREEN(l-i4-i7,l-i7-i6,@ALL-RED2);
        GREEN(l-i4-i7,l-i7-i6,@ALL-RED3);
        GREEN(l-i4-i7,l-i7-i6,@ALL-RED4);
        GREEN(l-i6-i7,l-i7-s7,@ALL-RED);
        GREEN(l-i6-i7,l-i7-s7,@ALL-RED2);
        GREEN(l-i6-i7,l-i7-s7,@ALL-RED3);
        GREEN(l-i6-i7,l-i7-s7,@ALL-RED4);
        GREEN(l-s7-i7,l-i7-i8,@ALL-RED);
        GREEN(l-s7-i7,l-i7-i8,@ALL-RED2);
        GREEN(l-s7-i7,l-i7-i8,@ALL-RED3);
        GREEN(l-s7-i7,l-i7-i8,@ALL-RED4);
        
        //intersection i8
        //turns
        TURN(l-s5-i8,l-i8-i5);
        TURN(l-s5-i8,l-i8-i7);
        TURN(l-s5-i8,l-i8-s6);
        TURN(l-i5-i8,l-i8-i7);
        TURN(l-i5-i8,l-i8-s6);
        TURN(l-i5-i8,l-i8-s5);
        TURN(l-i7-i8,l-i8-s6);
        TURN(l-i7-i8,l-i8-s5);
        TURN(l-i7-i8,l-i8-i5);
        TURN(l-s6-i8,l-i8-s5);
        TURN(l-s6-i8,l-i8-i5);
        TURN(l-s6-i8,l-i8-i7);
        //link-to
        LINK-TO(l-s5-i8,i8);
        LINK-TO(l-i5-i8,i8);
        LINK-TO(l-i7-i8,i8);
        LINK-TO(l-s6-i8,i8);
        //link-from
        LINK-FROM(i8,l-i8-s5);
        LINK-FROM(i8,l-i8-i5);
        LINK-FROM(i8,l-i8-i7);
        LINK-FROM(i8,l-i8-s6);
        //phase properties
        PHASE-MIN(i8) = 7;
        PHASE-MAX(i8) = 60;
        PHASE-ALL-RED-DUR(i8) = 4;
        //green turns
        GREEN(l-s5-i8,l-i8-s6,@WEST-EAST-LEFT);
        GREEN(l-i7-i8,l-i8-i5,@WEST-EAST-LEFT);
        GREEN(l-s5-i8,l-i8-i7,@WEST-EAST-THROUGH);
        GREEN(l-i7-i8,l-i8-s5,@WEST-EAST-THROUGH);
        GREEN(l-i5-i8,l-i8-s5,@NORTH-SOUTH-LEFT);
        GREEN(l-s6-i8,l-i8-i7,@NORTH-SOUTH-LEFT);
        GREEN(l-i5-i8,l-i8-s6,@NORTH-SOUTH-THROUGH);
        GREEN(l-s6-i8,l-i8-i5,@NORTH-SOUTH-THROUGH);
        GREEN(l-s5-i8,l-i8-i5,@WEST-EAST-LEFT);
        GREEN(l-s5-i8,l-i8-i5,@WEST-EAST-THROUGH);
        GREEN(l-s5-i8,l-i8-i5,@NORTH-SOUTH-LEFT);
        GREEN(l-s5-i8,l-i8-i5,@NORTH-SOUTH-THROUGH);
        GREEN(l-i5-i8,l-i8-i7,@WEST-EAST-LEFT);
        GREEN(l-i5-i8,l-i8-i7,@WEST-EAST-THROUGH);
        GREEN(l-i5-i8,l-i8-i7,@NORTH-SOUTH-LEFT);
        GREEN(l-i5-i8,l-i8-i7,@NORTH-SOUTH-THROUGH);
        GREEN(l-i7-i8,l-i8-s6,@WEST-EAST-LEFT);
        GREEN(l-i7-i8,l-i8-s6,@WEST-EAST-THROUGH);
        GREEN(l-i7-i8,l-i8-s6,@NORTH-SOUTH-LEFT);
        GREEN(l-i7-i8,l-i8-s6,@NORTH-SOUTH-THROUGH);
        GREEN(l-s6-i8,l-i8-s5,@WEST-EAST-LEFT);
        GREEN(l-s6-i8,l-i8-s5,@WEST-EAST-THROUGH);
        GREEN(l-s6-i8,l-i8-s5,@NORTH-SOUTH-LEFT);
        GREEN(l-s6-i8,l-i8-s5,@NORTH-SOUTH-THROUGH);
        GREEN(l-s5-i8,l-i8-i5,@ALL-RED);
        GREEN(l-s5-i8,l-i8-i5,@ALL-RED2);
        GREEN(l-s5-i8,l-i8-i5,@ALL-RED3);
        GREEN(l-s5-i8,l-i8-i5,@ALL-RED4);
        GREEN(l-i5-i8,l-i8-i7,@ALL-RED);
        GREEN(l-i5-i8,l-i8-i7,@ALL-RED2);
        GREEN(l-i5-i8,l-i8-i7,@ALL-RED3);
        GREEN(l-i5-i8,l-i8-i7,@ALL-RED4);
        GREEN(l-i7-i8,l-i8-s6,@ALL-RED);
        GREEN(l-i7-i8,l-i8-s6,@ALL-RED2);
        GREEN(l-i7-i8,l-i8-s6,@ALL-RED3);
        GREEN(l-i7-i8,l-i8-s6,@ALL-RED4);
        GREEN(l-s6-i8,l-i8-s5,@ALL-RED);
        GREEN(l-s6-i8,l-i8-s5,@ALL-RED2);
        GREEN(l-s6-i8,l-i8-s5,@ALL-RED3);
        GREEN(l-s6-i8,l-i8-s5,@ALL-RED4);
        // time-delay properties
        TIME-HEAD(t0);
        TIME-TAIL(t29);
        TIME-VAL(t0) = 0;
        TIME-VAL(t1) = 1;
        TIME-VAL(t2) = 2;
        TIME-VAL(t3) = 3;
        TIME-VAL(t4) = 4;
        TIME-VAL(t5) = 5;
        TIME-VAL(t6) = 6;
        TIME-VAL(t7) = 7;
        TIME-VAL(t8) = 8;
        TIME-VAL(t9) = 9;
        TIME-VAL(t10) = 10;
        TIME-VAL(t11) = 11;
        TIME-VAL(t12) = 12;
        TIME-VAL(t13) = 13;
        TIME-VAL(t14) = 14;
        TIME-VAL(t15) = 15;
        TIME-VAL(t16) = 16;
        TIME-VAL(t17) = 17;
        TIME-VAL(t18) = 18;
        TIME-VAL(t19) = 19;
        TIME-VAL(t20) = 20;
        TIME-VAL(t21) = 21;
        TIME-VAL(t22) = 22;
        TIME-VAL(t23) = 23;
        TIME-VAL(t24) = 24;
        TIME-VAL(t25) = 25;
        TIME-VAL(t26) = 26;
        TIME-VAL(t27) = 27;
        TIME-VAL(t28) = 28;
        TIME-VAL(t29) = 29;
        NEXT(t0,t1);
        NEXT(t1,t2);
        NEXT(t2,t3);
        NEXT(t3,t4);
        NEXT(t4,t5);
        NEXT(t5,t6);
        NEXT(t6,t7);
        NEXT(t7,t8);
        NEXT(t8,t9);
        NEXT(t9,t10);
        NEXT(t10,t11);
        NEXT(t11,t12);
        NEXT(t12,t13);
        NEXT(t13,t14);
        NEXT(t14,t15);
        NEXT(t15,t16);
        NEXT(t16,t17);
        NEXT(t17,t18);
        NEXT(t18,t19);
        NEXT(t19,t20);
        NEXT(t20,t21);
        NEXT(t21,t22);
        NEXT(t22,t23);
        NEXT(t23,t24);
        NEXT(t24,t25);
        NEXT(t25,t26);
        NEXT(t26,t27);
        NEXT(t27,t28);
        NEXT(t28,t29);
        //cartesian coordinates (for visualization)
        X(i0) = 374.0; Y(i0) = 731.0;
        X(i1) = 558.0; Y(i1) = 731.0;
        X(i2) = 730.0; Y(i2) = 731.0;
        X(i3) = 374.0; Y(i3) = 486.0;
        X(i4) = 558.0; Y(i4) = 486.0;
        X(i5) = 730.0; Y(i5) = 486.0;
        X(i6) = 374.0; Y(i6) = 311.0;
        X(i7) = 558.0; Y(i7) = 311.0;
        X(i8) = 730.0; Y(i8) = 311.0;
        SOURCE-X(l-s11-i0) = 0.0; SOURCE-Y(l-s11-i0) = 731.0;
        SOURCE-X(l-s3-i2) = 1042.0; SOURCE-Y(l-s3-i2) = 731.0;
        SINK-X(l-i0-s11) = 0.0; SINK-Y(l-i0-s11) = 731.0;
        SINK-X(l-i2-s3) = 1042.0; SINK-Y(l-i2-s3) = 731.0;
        SOURCE-X(l-s10-i3) = 0.0; SOURCE-Y(l-s10-i3) = 486.0;
        SOURCE-X(l-s4-i5) = 1042.0; SOURCE-Y(l-s4-i5) = 486.0;
        SINK-X(l-i3-s10) = 0.0; SINK-Y(l-i3-s10) = 486.0;
        SINK-X(l-i5-s4) = 1042.0; SINK-Y(l-i5-s4) = 486.0;
        SOURCE-X(l-s9-i6) = 0.0; SOURCE-Y(l-s9-i6) = 311.0;
        SOURCE-X(l-s5-i8) = 1042.0; SOURCE-Y(l-s5-i8) = 311.0;
        SINK-X(l-i6-s9) = 0.0; SINK-Y(l-i6-s9) = 311.0;
        SINK-X(l-i8-s5) = 1042.0; SINK-Y(l-i8-s5) = 311.0;
        SOURCE-X(l-s0-i0) = 374.0; SOURCE-Y(l-s0-i0) = 1045.0;
        SOURCE-X(l-s8-i6) = 374.0; SOURCE-Y(l-s8-i6) = 0.0;
        SINK-X(l-i0-s0) = 374.0; SINK-Y(l-i0-s0) = 1045.0;
        SINK-X(l-i6-s8) = 374.0; SINK-Y(l-i6-s8) = 0.0;
        SOURCE-X(l-s1-i1) = 558.0; SOURCE-Y(l-s1-i1) = 1045.0;
        SOURCE-X(l-s7-i7) = 558.0; SOURCE-Y(l-s7-i7) = 0.0;
        SINK-X(l-i1-s1) = 558.0; SINK-Y(l-i1-s1) = 1045.0;
        SINK-X(l-i7-s7) = 558.0; SINK-Y(l-i7-s7) = 0.0;
        SOURCE-X(l-s2-i2) = 730.0; SOURCE-Y(l-s2-i2) = 1045.0;
        SOURCE-X(l-s6-i8) = 730.0; SOURCE-Y(l-s6-i8) = 0.0;
        SINK-X(l-i2-s2) = 730.0; SINK-Y(l-i2-s2) = 1045.0;
        SINK-X(l-i8-s6) = 730.0; SINK-Y(l-i8-s6) = 0.0;
    };
}

instance grid_3x3 {
    domain = BLX_model;
    non-fluents = grid_3x3;
    max-nondef-actions = 9;
    horizon = 200;
    discount = 1.0;
}