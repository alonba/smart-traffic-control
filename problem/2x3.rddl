non-fluents grid_2x3 {
    domain = BLX_model;

    objects {
        intersection : {i0, i1, i2, i3, i4, i5};
        link         : {l-i0-s0, l-i0-i1, l-i0-i3, l-i0-s9, l-i1-s1, l-i1-i2, l-i1-i4, l-i1-i0, l-i2-s2, l-i2-s3, l-i2-i5, l-i2-i1, l-i3-i0, l-i3-i4, l-i3-s7, l-i3-s8, l-i4-i1, l-i4-i5, l-i4-s6, l-i4-i3, l-i5-i2, l-i5-s4, l-i5-s5, l-i5-i4, l-s0-i0, l-s7-i3, l-s1-i1, l-s6-i4, l-s2-i2, l-s5-i5, l-s9-i0, l-s3-i2, l-s8-i3, l-s4-i5};
        time         : {t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27};
    };

    non-fluents {
        //sources
        SOURCE(l-s9-i0);
        SOURCE(l-s3-i2);
        SOURCE(l-s8-i3);
        SOURCE(l-s4-i5);
        SOURCE(l-s0-i0);
        SOURCE(l-s7-i3);
        SOURCE(l-s1-i1);
        SOURCE(l-s6-i4);
        SOURCE(l-s2-i2);
        SOURCE(l-s5-i5);
        //sinks
        SINK(l-i0-s9);
        SINK(l-i2-s3);
        SINK(l-i3-s8);
        SINK(l-i5-s4);
        SINK(l-i0-s0);
        SINK(l-i3-s7);
        SINK(l-i1-s1);
        SINK(l-i4-s6);
        SINK(l-i2-s2);
        SINK(l-i5-s5);
        //satflow rates
        MU(l-s9-i0,l-i0-i1) = 1.06;
        MU(l-s9-i0,l-i0-s0) = 0.636;
        MU(l-s9-i0,l-i0-i3) = 0.42400000000000004;
        MU(l-i1-i0,l-i0-s9) = 1.06;
        MU(l-s0-i0,l-i0-i1) = 0.636;
        MU(l-i3-i0,l-i0-i1) = 0.42400000000000004;
        MU(l-s0-i0,l-i0-i3) = 1.06;
        MU(l-i1-i0,l-i0-i3) = 0.636;
        MU(l-i1-i0,l-i0-s0) = 0.42400000000000004;
        MU(l-i3-i0,l-i0-s0) = 1.06;
        MU(l-i3-i0,l-i0-s9) = 0.636;
        MU(l-s0-i0,l-i0-s9) = 0.42400000000000004;
        MU(l-i0-i1,l-i1-i2) = 1.06;
        MU(l-i0-i1,l-i1-s1) = 0.636;
        MU(l-i0-i1,l-i1-i4) = 0.42400000000000004;
        MU(l-i2-i1,l-i1-i0) = 1.06;
        MU(l-s1-i1,l-i1-i2) = 0.636;
        MU(l-i4-i1,l-i1-i2) = 0.42400000000000004;
        MU(l-s1-i1,l-i1-i4) = 1.06;
        MU(l-i2-i1,l-i1-i4) = 0.636;
        MU(l-i2-i1,l-i1-s1) = 0.42400000000000004;
        MU(l-i4-i1,l-i1-s1) = 1.06;
        MU(l-i4-i1,l-i1-i0) = 0.636;
        MU(l-s1-i1,l-i1-i0) = 0.42400000000000004;
        MU(l-i1-i2,l-i2-s3) = 1.06;
        MU(l-i1-i2,l-i2-s2) = 0.636;
        MU(l-i1-i2,l-i2-i5) = 0.42400000000000004;
        MU(l-s3-i2,l-i2-i1) = 1.06;
        MU(l-s2-i2,l-i2-s3) = 0.636;
        MU(l-i5-i2,l-i2-s3) = 0.42400000000000004;
        MU(l-s2-i2,l-i2-i5) = 1.06;
        MU(l-s3-i2,l-i2-i5) = 0.636;
        MU(l-s3-i2,l-i2-s2) = 0.42400000000000004;
        MU(l-i5-i2,l-i2-s2) = 1.06;
        MU(l-i5-i2,l-i2-i1) = 0.636;
        MU(l-s2-i2,l-i2-i1) = 0.42400000000000004;
        MU(l-s8-i3,l-i3-i4) = 1.06;
        MU(l-s8-i3,l-i3-i0) = 0.636;
        MU(l-s8-i3,l-i3-s7) = 0.42400000000000004;
        MU(l-i4-i3,l-i3-s8) = 1.06;
        MU(l-i0-i3,l-i3-i4) = 0.636;
        MU(l-s7-i3,l-i3-i4) = 0.42400000000000004;
        MU(l-i0-i3,l-i3-s7) = 1.06;
        MU(l-i4-i3,l-i3-s7) = 0.636;
        MU(l-i4-i3,l-i3-i0) = 0.42400000000000004;
        MU(l-s7-i3,l-i3-i0) = 1.06;
        MU(l-s7-i3,l-i3-s8) = 0.636;
        MU(l-i0-i3,l-i3-s8) = 0.42400000000000004;
        MU(l-i3-i4,l-i4-i5) = 1.06;
        MU(l-i3-i4,l-i4-i1) = 0.636;
        MU(l-i3-i4,l-i4-s6) = 0.42400000000000004;
        MU(l-i5-i4,l-i4-i3) = 1.06;
        MU(l-i1-i4,l-i4-i5) = 0.636;
        MU(l-s6-i4,l-i4-i5) = 0.42400000000000004;
        MU(l-i1-i4,l-i4-s6) = 1.06;
        MU(l-i5-i4,l-i4-s6) = 0.636;
        MU(l-i5-i4,l-i4-i1) = 0.42400000000000004;
        MU(l-s6-i4,l-i4-i1) = 1.06;
        MU(l-s6-i4,l-i4-i3) = 0.636;
        MU(l-i1-i4,l-i4-i3) = 0.42400000000000004;
        MU(l-i4-i5,l-i5-s4) = 1.06;
        MU(l-i4-i5,l-i5-i2) = 0.636;
        MU(l-i4-i5,l-i5-s5) = 0.42400000000000004;
        MU(l-s4-i5,l-i5-i4) = 1.06;
        MU(l-i2-i5,l-i5-s4) = 0.636;
        MU(l-s5-i5,l-i5-s4) = 0.42400000000000004;
        MU(l-i2-i5,l-i5-s5) = 1.06;
        MU(l-s4-i5,l-i5-s5) = 0.636;
        MU(l-s4-i5,l-i5-i2) = 0.42400000000000004;
        MU(l-s5-i5,l-i5-i2) = 1.06;
        MU(l-s5-i5,l-i5-i4) = 0.636;
        MU(l-i2-i5,l-i5-i4) = 0.42400000000000004;
        //turn probabilities
        BETA(l-s9-i0,l-i0-i1) = 0.7173059055169232;
        BETA(l-s9-i0,l-i0-s0) = 0.1826940944830768;
        BETA(l-s9-i0,l-i0-i3) = 0.1;
        BETA(l-i1-i0,l-i0-s9) = 0.6450075095375172;
        BETA(l-s0-i0,l-i0-i1) = 0.25499249046248273;
        BETA(l-i3-i0,l-i0-i1) = 0.10000000000000009;
        BETA(l-s0-i0,l-i0-i3) = 0.7859386861612225;
        BETA(l-i1-i0,l-i0-i3) = 0.11406131383877738;
        BETA(l-i1-i0,l-i0-s0) = 0.10000000000000009;
        BETA(l-i3-i0,l-i0-s0) = 0.6132756897879731;
        BETA(l-i3-i0,l-i0-s9) = 0.2867243102120268;
        BETA(l-s0-i0,l-i0-s9) = 0.10000000000000009;
        BETA(l-i0-i1,l-i1-i2) = 0.7378178341577848;
        BETA(l-i0-i1,l-i1-s1) = 0.1621821658422152;
        BETA(l-i0-i1,l-i1-i4) = 0.1;
        BETA(l-i2-i1,l-i1-i0) = 0.6894678464808481;
        BETA(l-s1-i1,l-i1-i2) = 0.2105321535191519;
        BETA(l-i4-i1,l-i1-i2) = 0.09999999999999998;
        BETA(l-s1-i1,l-i1-i4) = 0.705477128379787;
        BETA(l-i2-i1,l-i1-i4) = 0.19452287162021287;
        BETA(l-i2-i1,l-i1-s1) = 0.10000000000000009;
        BETA(l-i4-i1,l-i1-s1) = 0.7161962294362032;
        BETA(l-i4-i1,l-i1-i0) = 0.18380377056379676;
        BETA(l-s1-i1,l-i1-i0) = 0.10000000000000003;
        BETA(l-i1-i2,l-i2-s3) = 0.6892643763109971;
        BETA(l-i1-i2,l-i2-s2) = 0.2107356236890028;
        BETA(l-i1-i2,l-i2-i5) = 0.10000000000000006;
        BETA(l-s3-i2,l-i2-i1) = 0.6846614400237385;
        BETA(l-s2-i2,l-i2-s3) = 0.21533855997626145;
        BETA(l-i5-i2,l-i2-s3) = 0.10000000000000003;
        BETA(l-s2-i2,l-i2-i5) = 0.6680568239459769;
        BETA(l-s3-i2,l-i2-i5) = 0.2319431760540231;
        BETA(l-s3-i2,l-i2-s2) = 0.10000000000000003;
        BETA(l-i5-i2,l-i2-s2) = 0.6790548059380495;
        BETA(l-i5-i2,l-i2-i1) = 0.22094519406195054;
        BETA(l-s2-i2,l-i2-i1) = 0.1;
        BETA(l-s8-i3,l-i3-i4) = 0.6065202218496041;
        BETA(l-s8-i3,l-i3-i0) = 0.29347977815039583;
        BETA(l-s8-i3,l-i3-s7) = 0.10000000000000009;
        BETA(l-i4-i3,l-i3-s8) = 0.7728820843272608;
        BETA(l-i0-i3,l-i3-i4) = 0.12711791567273922;
        BETA(l-s7-i3,l-i3-i4) = 0.09999999999999998;
        BETA(l-i0-i3,l-i3-s7) = 0.6015730458353923;
        BETA(l-i4-i3,l-i3-s7) = 0.29842695416460774;
        BETA(l-i4-i3,l-i3-i0) = 0.09999999999999998;
        BETA(l-s7-i3,l-i3-i0) = 0.704309225269896;
        BETA(l-s7-i3,l-i3-s8) = 0.19569077473010396;
        BETA(l-i0-i3,l-i3-s8) = 0.1;
        BETA(l-i3-i4,l-i4-i5) = 0.6042986209354726;
        BETA(l-i3-i4,l-i4-i1) = 0.2957013790645273;
        BETA(l-i3-i4,l-i4-s6) = 0.10000000000000009;
        BETA(l-i5-i4,l-i4-i3) = 0.6818090058186872;
        BETA(l-i1-i4,l-i4-i5) = 0.21819099418131283;
        BETA(l-s6-i4,l-i4-i5) = 0.09999999999999998;
        BETA(l-i1-i4,l-i4-s6) = 0.7530722091593562;
        BETA(l-i5-i4,l-i4-s6) = 0.14692779084064375;
        BETA(l-i5-i4,l-i4-i1) = 0.1;
        BETA(l-s6-i4,l-i4-i1) = 0.6802558706889984;
        BETA(l-s6-i4,l-i4-i3) = 0.2197441293110016;
        BETA(l-i1-i4,l-i4-i3) = 0.1;
        BETA(l-i4-i5,l-i5-s4) = 0.7175739521800047;
        BETA(l-i4-i5,l-i5-i2) = 0.18242604781999522;
        BETA(l-i4-i5,l-i5-s5) = 0.10000000000000003;
        BETA(l-s4-i5,l-i5-i4) = 0.7514631567904073;
        BETA(l-i2-i5,l-i5-s4) = 0.14853684320959262;
        BETA(l-s5-i5,l-i5-s4) = 0.10000000000000006;
        BETA(l-i2-i5,l-i5-s5) = 0.6179433627667945;
        BETA(l-s4-i5,l-i5-s5) = 0.2820566372332055;
        BETA(l-s4-i5,l-i5-i2) = 0.09999999999999998;
        BETA(l-s5-i5,l-i5-i2) = 0.7655449978223777;
        BETA(l-s5-i5,l-i5-i4) = 0.13445500217762227;
        BETA(l-i2-i5,l-i5-i4) = 0.1;
        //link lengths
        Dl(l-i0-s0) = 353.0;
        Dl(l-i0-i1) = 206.0;
        Dl(l-i0-i3) = 183.0;
        Dl(l-i0-s9) = 258.0;
        Dl(l-i1-s1) = 353.0;
        Dl(l-i1-i2) = 230.0;
        Dl(l-i1-i4) = 183.0;
        Dl(l-i1-i0) = 206.0;
        Dl(l-i2-s2) = 353.0;
        Dl(l-i2-s3) = 349.0;
        Dl(l-i2-i5) = 183.0;
        Dl(l-i2-i1) = 230.0;
        Dl(l-i3-i0) = 183.0;
        Dl(l-i3-i4) = 206.0;
        Dl(l-i3-s7) = 284.0;
        Dl(l-i3-s8) = 258.0;
        Dl(l-i4-i1) = 183.0;
        Dl(l-i4-i5) = 230.0;
        Dl(l-i4-s6) = 284.0;
        Dl(l-i4-i3) = 206.0;
        Dl(l-i5-i2) = 183.0;
        Dl(l-i5-s4) = 349.0;
        Dl(l-i5-s5) = 284.0;
        Dl(l-i5-i4) = 230.0;
        Dl(l-s0-i0) = 353.0;
        Dl(l-s7-i3) = 284.0;
        Dl(l-s1-i1) = 353.0;
        Dl(l-s6-i4) = 284.0;
        Dl(l-s2-i2) = 353.0;
        Dl(l-s5-i5) = 284.0;
        Dl(l-s9-i0) = 258.0;
        Dl(l-s3-i2) = 349.0;
        Dl(l-s8-i3) = 258.0;
        Dl(l-s4-i5) = 349.0;
        //source arrival rates
        SOURCE-ARRIVAL-RATE(l-s0-i0) = 0.24;
        SOURCE-ARRIVAL-RATE(l-s7-i3) = 0.3;
        SOURCE-ARRIVAL-RATE(l-s1-i1) = 0.24;
        SOURCE-ARRIVAL-RATE(l-s6-i4) = 0.36;
        SOURCE-ARRIVAL-RATE(l-s2-i2) = 0.37;
        SOURCE-ARRIVAL-RATE(l-s5-i5) = 0.36;
        SOURCE-ARRIVAL-RATE(l-s9-i0) = 0.33;
        SOURCE-ARRIVAL-RATE(l-s3-i2) = 0.31;
        SOURCE-ARRIVAL-RATE(l-s8-i3) = 0.33;
        SOURCE-ARRIVAL-RATE(l-s4-i5) = 0.33;
        
        //intersection i0
        //turns
        TURN(l-i1-i0,l-i0-s0);
        TURN(l-i1-i0,l-i0-s9);
        TURN(l-i1-i0,l-i0-i3);
        TURN(l-s0-i0,l-i0-s9);
        TURN(l-s0-i0,l-i0-i3);
        TURN(l-s0-i0,l-i0-i1);
        TURN(l-s9-i0,l-i0-i3);
        TURN(l-s9-i0,l-i0-i1);
        TURN(l-s9-i0,l-i0-s0);
        TURN(l-i3-i0,l-i0-i1);
        TURN(l-i3-i0,l-i0-s0);
        TURN(l-i3-i0,l-i0-s9);
        //link-to
        LINK-TO(l-i1-i0,i0);
        LINK-TO(l-s0-i0,i0);
        LINK-TO(l-s9-i0,i0);
        LINK-TO(l-i3-i0,i0);
        //link-from
        LINK-FROM(i0,l-i0-i1);
        LINK-FROM(i0,l-i0-s0);
        LINK-FROM(i0,l-i0-s9);
        LINK-FROM(i0,l-i0-i3);
        //phase properties
        PHASE-MIN(i0) = 7;
        PHASE-MAX(i0) = 60;
        PHASE-ALL-RED-DUR(i0) = 4;
        //green turns
        GREEN(l-i1-i0,l-i0-i3,@WEST-EAST-LEFT);
        GREEN(l-s9-i0,l-i0-s0,@WEST-EAST-LEFT);
        GREEN(l-i1-i0,l-i0-s9,@WEST-EAST-THROUGH);
        GREEN(l-s9-i0,l-i0-i1,@WEST-EAST-THROUGH);
        GREEN(l-s0-i0,l-i0-i1,@NORTH-SOUTH-LEFT);
        GREEN(l-i3-i0,l-i0-s9,@NORTH-SOUTH-LEFT);
        GREEN(l-s0-i0,l-i0-i3,@NORTH-SOUTH-THROUGH);
        GREEN(l-i3-i0,l-i0-s0,@NORTH-SOUTH-THROUGH);
        GREEN(l-i1-i0,l-i0-s0,@WEST-EAST-LEFT);
        GREEN(l-i1-i0,l-i0-s0,@WEST-EAST-THROUGH);
        GREEN(l-i1-i0,l-i0-s0,@NORTH-SOUTH-LEFT);
        GREEN(l-i1-i0,l-i0-s0,@NORTH-SOUTH-THROUGH);
        GREEN(l-s0-i0,l-i0-s9,@WEST-EAST-LEFT);
        GREEN(l-s0-i0,l-i0-s9,@WEST-EAST-THROUGH);
        GREEN(l-s0-i0,l-i0-s9,@NORTH-SOUTH-LEFT);
        GREEN(l-s0-i0,l-i0-s9,@NORTH-SOUTH-THROUGH);
        GREEN(l-s9-i0,l-i0-i3,@WEST-EAST-LEFT);
        GREEN(l-s9-i0,l-i0-i3,@WEST-EAST-THROUGH);
        GREEN(l-s9-i0,l-i0-i3,@NORTH-SOUTH-LEFT);
        GREEN(l-s9-i0,l-i0-i3,@NORTH-SOUTH-THROUGH);
        GREEN(l-i3-i0,l-i0-i1,@WEST-EAST-LEFT);
        GREEN(l-i3-i0,l-i0-i1,@WEST-EAST-THROUGH);
        GREEN(l-i3-i0,l-i0-i1,@NORTH-SOUTH-LEFT);
        GREEN(l-i3-i0,l-i0-i1,@NORTH-SOUTH-THROUGH);
        GREEN(l-i1-i0,l-i0-s0,@ALL-RED);
        GREEN(l-i1-i0,l-i0-s0,@ALL-RED2);
        GREEN(l-i1-i0,l-i0-s0,@ALL-RED3);
        GREEN(l-i1-i0,l-i0-s0,@ALL-RED4);
        GREEN(l-s0-i0,l-i0-s9,@ALL-RED);
        GREEN(l-s0-i0,l-i0-s9,@ALL-RED2);
        GREEN(l-s0-i0,l-i0-s9,@ALL-RED3);
        GREEN(l-s0-i0,l-i0-s9,@ALL-RED4);
        GREEN(l-s9-i0,l-i0-i3,@ALL-RED);
        GREEN(l-s9-i0,l-i0-i3,@ALL-RED2);
        GREEN(l-s9-i0,l-i0-i3,@ALL-RED3);
        GREEN(l-s9-i0,l-i0-i3,@ALL-RED4);
        GREEN(l-i3-i0,l-i0-i1,@ALL-RED);
        GREEN(l-i3-i0,l-i0-i1,@ALL-RED2);
        GREEN(l-i3-i0,l-i0-i1,@ALL-RED3);
        GREEN(l-i3-i0,l-i0-i1,@ALL-RED4);
        
        //intersection i1
        //turns
        TURN(l-i2-i1,l-i1-s1);
        TURN(l-i2-i1,l-i1-i0);
        TURN(l-i2-i1,l-i1-i4);
        TURN(l-s1-i1,l-i1-i0);
        TURN(l-s1-i1,l-i1-i4);
        TURN(l-s1-i1,l-i1-i2);
        TURN(l-i0-i1,l-i1-i4);
        TURN(l-i0-i1,l-i1-i2);
        TURN(l-i0-i1,l-i1-s1);
        TURN(l-i4-i1,l-i1-i2);
        TURN(l-i4-i1,l-i1-s1);
        TURN(l-i4-i1,l-i1-i0);
        //link-to
        LINK-TO(l-i2-i1,i1);
        LINK-TO(l-s1-i1,i1);
        LINK-TO(l-i0-i1,i1);
        LINK-TO(l-i4-i1,i1);
        //link-from
        LINK-FROM(i1,l-i1-i2);
        LINK-FROM(i1,l-i1-s1);
        LINK-FROM(i1,l-i1-i0);
        LINK-FROM(i1,l-i1-i4);
        //phase properties
        PHASE-MIN(i1) = 7;
        PHASE-MAX(i1) = 60;
        PHASE-ALL-RED-DUR(i1) = 4;
        //green turns
        GREEN(l-i2-i1,l-i1-i4,@WEST-EAST-LEFT);
        GREEN(l-i0-i1,l-i1-s1,@WEST-EAST-LEFT);
        GREEN(l-i2-i1,l-i1-i0,@WEST-EAST-THROUGH);
        GREEN(l-i0-i1,l-i1-i2,@WEST-EAST-THROUGH);
        GREEN(l-s1-i1,l-i1-i2,@NORTH-SOUTH-LEFT);
        GREEN(l-i4-i1,l-i1-i0,@NORTH-SOUTH-LEFT);
        GREEN(l-s1-i1,l-i1-i4,@NORTH-SOUTH-THROUGH);
        GREEN(l-i4-i1,l-i1-s1,@NORTH-SOUTH-THROUGH);
        GREEN(l-i2-i1,l-i1-s1,@WEST-EAST-LEFT);
        GREEN(l-i2-i1,l-i1-s1,@WEST-EAST-THROUGH);
        GREEN(l-i2-i1,l-i1-s1,@NORTH-SOUTH-LEFT);
        GREEN(l-i2-i1,l-i1-s1,@NORTH-SOUTH-THROUGH);
        GREEN(l-s1-i1,l-i1-i0,@WEST-EAST-LEFT);
        GREEN(l-s1-i1,l-i1-i0,@WEST-EAST-THROUGH);
        GREEN(l-s1-i1,l-i1-i0,@NORTH-SOUTH-LEFT);
        GREEN(l-s1-i1,l-i1-i0,@NORTH-SOUTH-THROUGH);
        GREEN(l-i0-i1,l-i1-i4,@WEST-EAST-LEFT);
        GREEN(l-i0-i1,l-i1-i4,@WEST-EAST-THROUGH);
        GREEN(l-i0-i1,l-i1-i4,@NORTH-SOUTH-LEFT);
        GREEN(l-i0-i1,l-i1-i4,@NORTH-SOUTH-THROUGH);
        GREEN(l-i4-i1,l-i1-i2,@WEST-EAST-LEFT);
        GREEN(l-i4-i1,l-i1-i2,@WEST-EAST-THROUGH);
        GREEN(l-i4-i1,l-i1-i2,@NORTH-SOUTH-LEFT);
        GREEN(l-i4-i1,l-i1-i2,@NORTH-SOUTH-THROUGH);
        GREEN(l-i2-i1,l-i1-s1,@ALL-RED);
        GREEN(l-i2-i1,l-i1-s1,@ALL-RED2);
        GREEN(l-i2-i1,l-i1-s1,@ALL-RED3);
        GREEN(l-i2-i1,l-i1-s1,@ALL-RED4);
        GREEN(l-s1-i1,l-i1-i0,@ALL-RED);
        GREEN(l-s1-i1,l-i1-i0,@ALL-RED2);
        GREEN(l-s1-i1,l-i1-i0,@ALL-RED3);
        GREEN(l-s1-i1,l-i1-i0,@ALL-RED4);
        GREEN(l-i0-i1,l-i1-i4,@ALL-RED);
        GREEN(l-i0-i1,l-i1-i4,@ALL-RED2);
        GREEN(l-i0-i1,l-i1-i4,@ALL-RED3);
        GREEN(l-i0-i1,l-i1-i4,@ALL-RED4);
        GREEN(l-i4-i1,l-i1-i2,@ALL-RED);
        GREEN(l-i4-i1,l-i1-i2,@ALL-RED2);
        GREEN(l-i4-i1,l-i1-i2,@ALL-RED3);
        GREEN(l-i4-i1,l-i1-i2,@ALL-RED4);
        
        //intersection i2
        //turns
        TURN(l-s3-i2,l-i2-s2);
        TURN(l-s3-i2,l-i2-i1);
        TURN(l-s3-i2,l-i2-i5);
        TURN(l-s2-i2,l-i2-i1);
        TURN(l-s2-i2,l-i2-i5);
        TURN(l-s2-i2,l-i2-s3);
        TURN(l-i1-i2,l-i2-i5);
        TURN(l-i1-i2,l-i2-s3);
        TURN(l-i1-i2,l-i2-s2);
        TURN(l-i5-i2,l-i2-s3);
        TURN(l-i5-i2,l-i2-s2);
        TURN(l-i5-i2,l-i2-i1);
        //link-to
        LINK-TO(l-s3-i2,i2);
        LINK-TO(l-s2-i2,i2);
        LINK-TO(l-i1-i2,i2);
        LINK-TO(l-i5-i2,i2);
        //link-from
        LINK-FROM(i2,l-i2-s3);
        LINK-FROM(i2,l-i2-s2);
        LINK-FROM(i2,l-i2-i1);
        LINK-FROM(i2,l-i2-i5);
        //phase properties
        PHASE-MIN(i2) = 7;
        PHASE-MAX(i2) = 60;
        PHASE-ALL-RED-DUR(i2) = 4;
        //green turns
        GREEN(l-s3-i2,l-i2-i5,@WEST-EAST-LEFT);
        GREEN(l-i1-i2,l-i2-s2,@WEST-EAST-LEFT);
        GREEN(l-s3-i2,l-i2-i1,@WEST-EAST-THROUGH);
        GREEN(l-i1-i2,l-i2-s3,@WEST-EAST-THROUGH);
        GREEN(l-s2-i2,l-i2-s3,@NORTH-SOUTH-LEFT);
        GREEN(l-i5-i2,l-i2-i1,@NORTH-SOUTH-LEFT);
        GREEN(l-s2-i2,l-i2-i5,@NORTH-SOUTH-THROUGH);
        GREEN(l-i5-i2,l-i2-s2,@NORTH-SOUTH-THROUGH);
        GREEN(l-s3-i2,l-i2-s2,@WEST-EAST-LEFT);
        GREEN(l-s3-i2,l-i2-s2,@WEST-EAST-THROUGH);
        GREEN(l-s3-i2,l-i2-s2,@NORTH-SOUTH-LEFT);
        GREEN(l-s3-i2,l-i2-s2,@NORTH-SOUTH-THROUGH);
        GREEN(l-s2-i2,l-i2-i1,@WEST-EAST-LEFT);
        GREEN(l-s2-i2,l-i2-i1,@WEST-EAST-THROUGH);
        GREEN(l-s2-i2,l-i2-i1,@NORTH-SOUTH-LEFT);
        GREEN(l-s2-i2,l-i2-i1,@NORTH-SOUTH-THROUGH);
        GREEN(l-i1-i2,l-i2-i5,@WEST-EAST-LEFT);
        GREEN(l-i1-i2,l-i2-i5,@WEST-EAST-THROUGH);
        GREEN(l-i1-i2,l-i2-i5,@NORTH-SOUTH-LEFT);
        GREEN(l-i1-i2,l-i2-i5,@NORTH-SOUTH-THROUGH);
        GREEN(l-i5-i2,l-i2-s3,@WEST-EAST-LEFT);
        GREEN(l-i5-i2,l-i2-s3,@WEST-EAST-THROUGH);
        GREEN(l-i5-i2,l-i2-s3,@NORTH-SOUTH-LEFT);
        GREEN(l-i5-i2,l-i2-s3,@NORTH-SOUTH-THROUGH);
        GREEN(l-s3-i2,l-i2-s2,@ALL-RED);
        GREEN(l-s3-i2,l-i2-s2,@ALL-RED2);
        GREEN(l-s3-i2,l-i2-s2,@ALL-RED3);
        GREEN(l-s3-i2,l-i2-s2,@ALL-RED4);
        GREEN(l-s2-i2,l-i2-i1,@ALL-RED);
        GREEN(l-s2-i2,l-i2-i1,@ALL-RED2);
        GREEN(l-s2-i2,l-i2-i1,@ALL-RED3);
        GREEN(l-s2-i2,l-i2-i1,@ALL-RED4);
        GREEN(l-i1-i2,l-i2-i5,@ALL-RED);
        GREEN(l-i1-i2,l-i2-i5,@ALL-RED2);
        GREEN(l-i1-i2,l-i2-i5,@ALL-RED3);
        GREEN(l-i1-i2,l-i2-i5,@ALL-RED4);
        GREEN(l-i5-i2,l-i2-s3,@ALL-RED);
        GREEN(l-i5-i2,l-i2-s3,@ALL-RED2);
        GREEN(l-i5-i2,l-i2-s3,@ALL-RED3);
        GREEN(l-i5-i2,l-i2-s3,@ALL-RED4);
        
        //intersection i3
        //turns
        TURN(l-i4-i3,l-i3-i0);
        TURN(l-i4-i3,l-i3-s8);
        TURN(l-i4-i3,l-i3-s7);
        TURN(l-i0-i3,l-i3-s8);
        TURN(l-i0-i3,l-i3-s7);
        TURN(l-i0-i3,l-i3-i4);
        TURN(l-s8-i3,l-i3-s7);
        TURN(l-s8-i3,l-i3-i4);
        TURN(l-s8-i3,l-i3-i0);
        TURN(l-s7-i3,l-i3-i4);
        TURN(l-s7-i3,l-i3-i0);
        TURN(l-s7-i3,l-i3-s8);
        //link-to
        LINK-TO(l-i4-i3,i3);
        LINK-TO(l-i0-i3,i3);
        LINK-TO(l-s8-i3,i3);
        LINK-TO(l-s7-i3,i3);
        //link-from
        LINK-FROM(i3,l-i3-i4);
        LINK-FROM(i3,l-i3-i0);
        LINK-FROM(i3,l-i3-s8);
        LINK-FROM(i3,l-i3-s7);
        //phase properties
        PHASE-MIN(i3) = 7;
        PHASE-MAX(i3) = 60;
        PHASE-ALL-RED-DUR(i3) = 4;
        //green turns
        GREEN(l-i4-i3,l-i3-s7,@WEST-EAST-LEFT);
        GREEN(l-s8-i3,l-i3-i0,@WEST-EAST-LEFT);
        GREEN(l-i4-i3,l-i3-s8,@WEST-EAST-THROUGH);
        GREEN(l-s8-i3,l-i3-i4,@WEST-EAST-THROUGH);
        GREEN(l-i0-i3,l-i3-i4,@NORTH-SOUTH-LEFT);
        GREEN(l-s7-i3,l-i3-s8,@NORTH-SOUTH-LEFT);
        GREEN(l-i0-i3,l-i3-s7,@NORTH-SOUTH-THROUGH);
        GREEN(l-s7-i3,l-i3-i0,@NORTH-SOUTH-THROUGH);
        GREEN(l-i4-i3,l-i3-i0,@WEST-EAST-LEFT);
        GREEN(l-i4-i3,l-i3-i0,@WEST-EAST-THROUGH);
        GREEN(l-i4-i3,l-i3-i0,@NORTH-SOUTH-LEFT);
        GREEN(l-i4-i3,l-i3-i0,@NORTH-SOUTH-THROUGH);
        GREEN(l-i0-i3,l-i3-s8,@WEST-EAST-LEFT);
        GREEN(l-i0-i3,l-i3-s8,@WEST-EAST-THROUGH);
        GREEN(l-i0-i3,l-i3-s8,@NORTH-SOUTH-LEFT);
        GREEN(l-i0-i3,l-i3-s8,@NORTH-SOUTH-THROUGH);
        GREEN(l-s8-i3,l-i3-s7,@WEST-EAST-LEFT);
        GREEN(l-s8-i3,l-i3-s7,@WEST-EAST-THROUGH);
        GREEN(l-s8-i3,l-i3-s7,@NORTH-SOUTH-LEFT);
        GREEN(l-s8-i3,l-i3-s7,@NORTH-SOUTH-THROUGH);
        GREEN(l-s7-i3,l-i3-i4,@WEST-EAST-LEFT);
        GREEN(l-s7-i3,l-i3-i4,@WEST-EAST-THROUGH);
        GREEN(l-s7-i3,l-i3-i4,@NORTH-SOUTH-LEFT);
        GREEN(l-s7-i3,l-i3-i4,@NORTH-SOUTH-THROUGH);
        GREEN(l-i4-i3,l-i3-i0,@ALL-RED);
        GREEN(l-i4-i3,l-i3-i0,@ALL-RED2);
        GREEN(l-i4-i3,l-i3-i0,@ALL-RED3);
        GREEN(l-i4-i3,l-i3-i0,@ALL-RED4);
        GREEN(l-i0-i3,l-i3-s8,@ALL-RED);
        GREEN(l-i0-i3,l-i3-s8,@ALL-RED2);
        GREEN(l-i0-i3,l-i3-s8,@ALL-RED3);
        GREEN(l-i0-i3,l-i3-s8,@ALL-RED4);
        GREEN(l-s8-i3,l-i3-s7,@ALL-RED);
        GREEN(l-s8-i3,l-i3-s7,@ALL-RED2);
        GREEN(l-s8-i3,l-i3-s7,@ALL-RED3);
        GREEN(l-s8-i3,l-i3-s7,@ALL-RED4);
        GREEN(l-s7-i3,l-i3-i4,@ALL-RED);
        GREEN(l-s7-i3,l-i3-i4,@ALL-RED2);
        GREEN(l-s7-i3,l-i3-i4,@ALL-RED3);
        GREEN(l-s7-i3,l-i3-i4,@ALL-RED4);
        
        //intersection i4
        //turns
        TURN(l-i5-i4,l-i4-i1);
        TURN(l-i5-i4,l-i4-i3);
        TURN(l-i5-i4,l-i4-s6);
        TURN(l-i1-i4,l-i4-i3);
        TURN(l-i1-i4,l-i4-s6);
        TURN(l-i1-i4,l-i4-i5);
        TURN(l-i3-i4,l-i4-s6);
        TURN(l-i3-i4,l-i4-i5);
        TURN(l-i3-i4,l-i4-i1);
        TURN(l-s6-i4,l-i4-i5);
        TURN(l-s6-i4,l-i4-i1);
        TURN(l-s6-i4,l-i4-i3);
        //link-to
        LINK-TO(l-i5-i4,i4);
        LINK-TO(l-i1-i4,i4);
        LINK-TO(l-i3-i4,i4);
        LINK-TO(l-s6-i4,i4);
        //link-from
        LINK-FROM(i4,l-i4-i5);
        LINK-FROM(i4,l-i4-i1);
        LINK-FROM(i4,l-i4-i3);
        LINK-FROM(i4,l-i4-s6);
        //phase properties
        PHASE-MIN(i4) = 7;
        PHASE-MAX(i4) = 60;
        PHASE-ALL-RED-DUR(i4) = 4;
        //green turns
        GREEN(l-i5-i4,l-i4-s6,@WEST-EAST-LEFT);
        GREEN(l-i3-i4,l-i4-i1,@WEST-EAST-LEFT);
        GREEN(l-i5-i4,l-i4-i3,@WEST-EAST-THROUGH);
        GREEN(l-i3-i4,l-i4-i5,@WEST-EAST-THROUGH);
        GREEN(l-i1-i4,l-i4-i5,@NORTH-SOUTH-LEFT);
        GREEN(l-s6-i4,l-i4-i3,@NORTH-SOUTH-LEFT);
        GREEN(l-i1-i4,l-i4-s6,@NORTH-SOUTH-THROUGH);
        GREEN(l-s6-i4,l-i4-i1,@NORTH-SOUTH-THROUGH);
        GREEN(l-i5-i4,l-i4-i1,@WEST-EAST-LEFT);
        GREEN(l-i5-i4,l-i4-i1,@WEST-EAST-THROUGH);
        GREEN(l-i5-i4,l-i4-i1,@NORTH-SOUTH-LEFT);
        GREEN(l-i5-i4,l-i4-i1,@NORTH-SOUTH-THROUGH);
        GREEN(l-i1-i4,l-i4-i3,@WEST-EAST-LEFT);
        GREEN(l-i1-i4,l-i4-i3,@WEST-EAST-THROUGH);
        GREEN(l-i1-i4,l-i4-i3,@NORTH-SOUTH-LEFT);
        GREEN(l-i1-i4,l-i4-i3,@NORTH-SOUTH-THROUGH);
        GREEN(l-i3-i4,l-i4-s6,@WEST-EAST-LEFT);
        GREEN(l-i3-i4,l-i4-s6,@WEST-EAST-THROUGH);
        GREEN(l-i3-i4,l-i4-s6,@NORTH-SOUTH-LEFT);
        GREEN(l-i3-i4,l-i4-s6,@NORTH-SOUTH-THROUGH);
        GREEN(l-s6-i4,l-i4-i5,@WEST-EAST-LEFT);
        GREEN(l-s6-i4,l-i4-i5,@WEST-EAST-THROUGH);
        GREEN(l-s6-i4,l-i4-i5,@NORTH-SOUTH-LEFT);
        GREEN(l-s6-i4,l-i4-i5,@NORTH-SOUTH-THROUGH);
        GREEN(l-i5-i4,l-i4-i1,@ALL-RED);
        GREEN(l-i5-i4,l-i4-i1,@ALL-RED2);
        GREEN(l-i5-i4,l-i4-i1,@ALL-RED3);
        GREEN(l-i5-i4,l-i4-i1,@ALL-RED4);
        GREEN(l-i1-i4,l-i4-i3,@ALL-RED);
        GREEN(l-i1-i4,l-i4-i3,@ALL-RED2);
        GREEN(l-i1-i4,l-i4-i3,@ALL-RED3);
        GREEN(l-i1-i4,l-i4-i3,@ALL-RED4);
        GREEN(l-i3-i4,l-i4-s6,@ALL-RED);
        GREEN(l-i3-i4,l-i4-s6,@ALL-RED2);
        GREEN(l-i3-i4,l-i4-s6,@ALL-RED3);
        GREEN(l-i3-i4,l-i4-s6,@ALL-RED4);
        GREEN(l-s6-i4,l-i4-i5,@ALL-RED);
        GREEN(l-s6-i4,l-i4-i5,@ALL-RED2);
        GREEN(l-s6-i4,l-i4-i5,@ALL-RED3);
        GREEN(l-s6-i4,l-i4-i5,@ALL-RED4);
        
        //intersection i5
        //turns
        TURN(l-s4-i5,l-i5-i2);
        TURN(l-s4-i5,l-i5-i4);
        TURN(l-s4-i5,l-i5-s5);
        TURN(l-i2-i5,l-i5-i4);
        TURN(l-i2-i5,l-i5-s5);
        TURN(l-i2-i5,l-i5-s4);
        TURN(l-i4-i5,l-i5-s5);
        TURN(l-i4-i5,l-i5-s4);
        TURN(l-i4-i5,l-i5-i2);
        TURN(l-s5-i5,l-i5-s4);
        TURN(l-s5-i5,l-i5-i2);
        TURN(l-s5-i5,l-i5-i4);
        //link-to
        LINK-TO(l-s4-i5,i5);
        LINK-TO(l-i2-i5,i5);
        LINK-TO(l-i4-i5,i5);
        LINK-TO(l-s5-i5,i5);
        //link-from
        LINK-FROM(i5,l-i5-s4);
        LINK-FROM(i5,l-i5-i2);
        LINK-FROM(i5,l-i5-i4);
        LINK-FROM(i5,l-i5-s5);
        //phase properties
        PHASE-MIN(i5) = 7;
        PHASE-MAX(i5) = 60;
        PHASE-ALL-RED-DUR(i5) = 4;
        //green turns
        GREEN(l-s4-i5,l-i5-s5,@WEST-EAST-LEFT);
        GREEN(l-i4-i5,l-i5-i2,@WEST-EAST-LEFT);
        GREEN(l-s4-i5,l-i5-i4,@WEST-EAST-THROUGH);
        GREEN(l-i4-i5,l-i5-s4,@WEST-EAST-THROUGH);
        GREEN(l-i2-i5,l-i5-s4,@NORTH-SOUTH-LEFT);
        GREEN(l-s5-i5,l-i5-i4,@NORTH-SOUTH-LEFT);
        GREEN(l-i2-i5,l-i5-s5,@NORTH-SOUTH-THROUGH);
        GREEN(l-s5-i5,l-i5-i2,@NORTH-SOUTH-THROUGH);
        GREEN(l-s4-i5,l-i5-i2,@WEST-EAST-LEFT);
        GREEN(l-s4-i5,l-i5-i2,@WEST-EAST-THROUGH);
        GREEN(l-s4-i5,l-i5-i2,@NORTH-SOUTH-LEFT);
        GREEN(l-s4-i5,l-i5-i2,@NORTH-SOUTH-THROUGH);
        GREEN(l-i2-i5,l-i5-i4,@WEST-EAST-LEFT);
        GREEN(l-i2-i5,l-i5-i4,@WEST-EAST-THROUGH);
        GREEN(l-i2-i5,l-i5-i4,@NORTH-SOUTH-LEFT);
        GREEN(l-i2-i5,l-i5-i4,@NORTH-SOUTH-THROUGH);
        GREEN(l-i4-i5,l-i5-s5,@WEST-EAST-LEFT);
        GREEN(l-i4-i5,l-i5-s5,@WEST-EAST-THROUGH);
        GREEN(l-i4-i5,l-i5-s5,@NORTH-SOUTH-LEFT);
        GREEN(l-i4-i5,l-i5-s5,@NORTH-SOUTH-THROUGH);
        GREEN(l-s5-i5,l-i5-s4,@WEST-EAST-LEFT);
        GREEN(l-s5-i5,l-i5-s4,@WEST-EAST-THROUGH);
        GREEN(l-s5-i5,l-i5-s4,@NORTH-SOUTH-LEFT);
        GREEN(l-s5-i5,l-i5-s4,@NORTH-SOUTH-THROUGH);
        GREEN(l-s4-i5,l-i5-i2,@ALL-RED);
        GREEN(l-s4-i5,l-i5-i2,@ALL-RED2);
        GREEN(l-s4-i5,l-i5-i2,@ALL-RED3);
        GREEN(l-s4-i5,l-i5-i2,@ALL-RED4);
        GREEN(l-i2-i5,l-i5-i4,@ALL-RED);
        GREEN(l-i2-i5,l-i5-i4,@ALL-RED2);
        GREEN(l-i2-i5,l-i5-i4,@ALL-RED3);
        GREEN(l-i2-i5,l-i5-i4,@ALL-RED4);
        GREEN(l-i4-i5,l-i5-s5,@ALL-RED);
        GREEN(l-i4-i5,l-i5-s5,@ALL-RED2);
        GREEN(l-i4-i5,l-i5-s5,@ALL-RED3);
        GREEN(l-i4-i5,l-i5-s5,@ALL-RED4);
        GREEN(l-s5-i5,l-i5-s4,@ALL-RED);
        GREEN(l-s5-i5,l-i5-s4,@ALL-RED2);
        GREEN(l-s5-i5,l-i5-s4,@ALL-RED3);
        GREEN(l-s5-i5,l-i5-s4,@ALL-RED4);
        // time-delay properties
        TIME-HEAD(t0);
        TIME-TAIL(t27);
        TIME-VAL(t0) = 0;
        TIME-VAL(t1) = 1;
        TIME-VAL(t2) = 2;
        TIME-VAL(t3) = 3;
        TIME-VAL(t4) = 4;
        TIME-VAL(t5) = 5;
        TIME-VAL(t6) = 6;
        TIME-VAL(t7) = 7;
        TIME-VAL(t8) = 8;
        TIME-VAL(t9) = 9;
        TIME-VAL(t10) = 10;
        TIME-VAL(t11) = 11;
        TIME-VAL(t12) = 12;
        TIME-VAL(t13) = 13;
        TIME-VAL(t14) = 14;
        TIME-VAL(t15) = 15;
        TIME-VAL(t16) = 16;
        TIME-VAL(t17) = 17;
        TIME-VAL(t18) = 18;
        TIME-VAL(t19) = 19;
        TIME-VAL(t20) = 20;
        TIME-VAL(t21) = 21;
        TIME-VAL(t22) = 22;
        TIME-VAL(t23) = 23;
        TIME-VAL(t24) = 24;
        TIME-VAL(t25) = 25;
        TIME-VAL(t26) = 26;
        TIME-VAL(t27) = 27;
        NEXT(t0,t1);
        NEXT(t1,t2);
        NEXT(t2,t3);
        NEXT(t3,t4);
        NEXT(t4,t5);
        NEXT(t5,t6);
        NEXT(t6,t7);
        NEXT(t7,t8);
        NEXT(t8,t9);
        NEXT(t9,t10);
        NEXT(t10,t11);
        NEXT(t11,t12);
        NEXT(t12,t13);
        NEXT(t13,t14);
        NEXT(t14,t15);
        NEXT(t15,t16);
        NEXT(t16,t17);
        NEXT(t17,t18);
        NEXT(t18,t19);
        NEXT(t19,t20);
        NEXT(t20,t21);
        NEXT(t21,t22);
        NEXT(t22,t23);
        NEXT(t23,t24);
        NEXT(t24,t25);
        NEXT(t25,t26);
        NEXT(t26,t27);
        //cartesian coordinates (for visualization)
        X(i0) = 258.0; Y(i0) = 467.0;
        X(i1) = 464.0; Y(i1) = 467.0;
        X(i2) = 694.0; Y(i2) = 467.0;
        X(i3) = 258.0; Y(i3) = 284.0;
        X(i4) = 464.0; Y(i4) = 284.0;
        X(i5) = 694.0; Y(i5) = 284.0;
        SOURCE-X(l-s9-i0) = 0.0; SOURCE-Y(l-s9-i0) = 467.0;
        SOURCE-X(l-s3-i2) = 1043.0; SOURCE-Y(l-s3-i2) = 467.0;
        SINK-X(l-i0-s9) = 0.0; SINK-Y(l-i0-s9) = 467.0;
        SINK-X(l-i2-s3) = 1043.0; SINK-Y(l-i2-s3) = 467.0;
        SOURCE-X(l-s8-i3) = 0.0; SOURCE-Y(l-s8-i3) = 284.0;
        SOURCE-X(l-s4-i5) = 1043.0; SOURCE-Y(l-s4-i5) = 284.0;
        SINK-X(l-i3-s8) = 0.0; SINK-Y(l-i3-s8) = 284.0;
        SINK-X(l-i5-s4) = 1043.0; SINK-Y(l-i5-s4) = 284.0;
        SOURCE-X(l-s0-i0) = 258.0; SOURCE-Y(l-s0-i0) = 820.0;
        SOURCE-X(l-s7-i3) = 258.0; SOURCE-Y(l-s7-i3) = 0.0;
        SINK-X(l-i0-s0) = 258.0; SINK-Y(l-i0-s0) = 820.0;
        SINK-X(l-i3-s7) = 258.0; SINK-Y(l-i3-s7) = 0.0;
        SOURCE-X(l-s1-i1) = 464.0; SOURCE-Y(l-s1-i1) = 820.0;
        SOURCE-X(l-s6-i4) = 464.0; SOURCE-Y(l-s6-i4) = 0.0;
        SINK-X(l-i1-s1) = 464.0; SINK-Y(l-i1-s1) = 820.0;
        SINK-X(l-i4-s6) = 464.0; SINK-Y(l-i4-s6) = 0.0;
        SOURCE-X(l-s2-i2) = 694.0; SOURCE-Y(l-s2-i2) = 820.0;
        SOURCE-X(l-s5-i5) = 694.0; SOURCE-Y(l-s5-i5) = 0.0;
        SINK-X(l-i2-s2) = 694.0; SINK-Y(l-i2-s2) = 820.0;
        SINK-X(l-i5-s5) = 694.0; SINK-Y(l-i5-s5) = 0.0;
    };
}

instance grid_2x3 {
    domain = BLX_model;
    non-fluents = grid_2x3;
    max-nondef-actions = 6;
    horizon = 200;
    discount = 1.0;
}